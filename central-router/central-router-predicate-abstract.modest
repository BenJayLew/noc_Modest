option "dtmc";


//-------Begin Varibales-------
const int DUR;
const int clkLower = 100;
const int clkUpper = clkLower + DUR;
int(clkLower..clkUpper) clk;

//transient int(0..1) clk;

//const int INJECTIONRATENUMERATOR = 1;
//const int INJECTIONRATEDENOMINATOR = 2;

// int totalFlitsDelivered = 0;
// int totalFlits = 0;
// int totalLatency = 0;

int(0..10) optimalRuns = 0;

action tick;

//--------End Varibales

// -----Predicates-----

bool c0b1, c0b2, c0b3, c0b4 = false;    //length of buffer 0, false when empty 
bool c1b1, c1b2, c1b3, c1b4 = false;    //length of buffer 1
bool c2b1, c2b2, c2b3, c2b4 = false;    //length of buffer 2
bool c3b1, c3b2, c3b3, c4b4 = false;    //length of buffer 3

bool c01, c02; //if c01==true dir=east, if c02==true dir=south, if both true dir=west, if both false dir=local
bool c10, c12; //if c10==true dir=north, if c12==true dir=south, if both true dir=west, if both false dir=local
bool c20, c21; //if c20==true dir=north, if c21==true dir=east, if both true dir=west, if both false dir=local
bool c30, c31; //if c30==true dir=north, if c31==true dir=east, if both true dir=south, if both false dir=local

bool c0Serviced, c1Serviced, c2Serviced, c3Serviced = false;

bool ca0, ca1, ca2, ca3, ca4 =  false;       //priority positions of the arbiter

//-----End Predicates-----


// ------ Begin: properties ---------
property optimalR = Pmax(<> (optimalRuns >= 1));
property Pr1 = Pmax(<> (clk >= clkUpper));
//property averageLatency = Pmax(<> ((clk >= clkUpper) && ((totalLatency/totalFlits) <= 1.75)));
//property p1 = Pmax(<>[S(clk)<=(clkUpper-clkLower)] (totalFlitsDelivered >= 1));
// ------ End: properties ---------



// ------ Begin: process definitions ------
//---- Paralell Processes ----
process Clock(){	
	tick {= clk++ =};
	if (clk <= clkUpper) {
	   Clock()
	}
	else {
	   stop
	} 
	//tick{= clk = 1 =};
	//Clock()
}

process Top(){
	do{
		Populate();
		shiftBuffers();
		
		Arbiter();	
		
		tick;

		if(clk>=clkUpper){
			stop
		}
		else{tau} 	
	}
}

//Sub Processes

process Populate(){
    if((clk % INJECTIONRATEDENOMINATOR) < INJECTIONRATENUMERATOR){
        //populate buffers
        if(c0b4 == true){           //if buffer 0's last spot is full, do nothing
            tau
        }
        else{                       //else inject a flit
            {= c0b4 = true =}
        };
        if(c1b4 == true){           //if buffer 0's last spot is full, do nothing
            tau
        }
        else{                       //else inject a flit
            {= c1b4 = true =}
        };
        if(c2b4 == true){           //if buffer 2's last spot is full, do nothing
            tau
        }
        else{                       //else inject a flit
            {= c2b4 = true =}
        };
        if(c3b4 == true){           //if buffer 3's last spot is full, do nothing
            tau
        }
        else{                       //else inject a flit
            {= c3b4 = true =}
        }
    }
    else {tau}
}

process shiftBuffers(){
    if(c0b1==false){                //shift buffer 0
        if(c0b2==false){
            if(c0b3==false){
                {=
                c0b1=c0b4,
                c0b4=false
                =}
            }
            else{
                {=
                c0b1=c0b3,
                c0b2=c0b4,
                c0b3=false,
                c0b4=false
                =}
            }
        }
        else{
            if(c0b3==false){
                {=
                c0b1=c0b2,
                c0b2=c0b4,
                c0b4=false
                =}
            }
            else{
                {=
                c0b1=c0b2,
                c0b2=c0b3,
                c0b3=c0b4,
                c0b4=false
                =}
            }
        }
    }
    else{
        if(c0b2==false){
            if(c0b3==false){
                {=
                c0b2=c0b4,
                c0b4=false    
                =}
            }
            else{
                {=
                c0b2=c0b3,
                c0b3=c0b4,
                c0b4=false
                =}
            }
        }
        else{
            if(c0b3==false){
                {=
                c0b3=c0b4,
                c0b4=false
                =}
            }
            else{
                tau
            }
        }
    };
    if(c1b1==false){                //shift buffer 1
        if(c1b2==false){
            if(c1b3==false){
                {=
                c1b1=c1b4,
                c1b4=false
                =}
            }
            else{
                {=
                c1b1=c1b3,
                c1b2=c1b4,
                c1b3=false,
                c1b4=false
                =}
            }
        }
        else{
            if(c1b3==false){
                {=
                c1b1=c1b2,
                c1b2=c1b4,
                c1b4=false
                =}
            }
            else{
                {=
                c1b1=c1b2,
                c1b2=c1b3,
                c1b3=c1b4,
                c1b4=false
                =}
            }
        }
    }
    else{
        if(c1b2==false){
            if(c1b3==false){
                {=
                c1b2=c1b4,
                c1b4=false    
                =}
            }
            else{
                {=
                c1b2=c1b3,
                c1b3=c1b4,
                c1b4=false
                =}
            }
        }
        else{
            if(c1b3==false){
                {=
                c1b3=c1b4,
                c1b4=false
                =}
            }
            else{
                tau
            }
        }
    };
    if(c2b1==false){                //shift buffer 2
        if(c2b2==false){
            if(c2b3==false){
                {=
                c2b1=c2b4,
                c2b4=false
                =}
            }
            else{
                {=
                c2b1=c2b3,
                c2b2=c2b4,
                c2b3=false,
                c2b4=false
                =}
            }
        }
        else{
            if(c2b3==false){
                {=
                c2b1=c2b2,
                c2b2=c2b4,
                c2b4=false
                =}
            }
            else{
                {=
                c2b1=c2b2,
                c2b2=c2b3,
                c2b3=c2b4,
                c2b4=false
                =}
            }
        }
    }
    else{
        if(c2b2==false){
            if(c2b3==false){
                {=
                c2b2=c2b4,
                c2b4=false    
                =}
            }
            else{
                {=
                c2b2=c2b3,
                c2b3=c2b4,
                c2b4=false
                =}
            }
        }
        else{
            if(c2b3==false){
                {=
                c2b3=c2b4,
                c2b4=false
                =}
            }
            else{
                tau
            }
        }
    };

    if(c3b1==false){                //shift buffer 3
        if(c3b2==false){
            if(c3b3==false){
                {=
                c3b1=c3b4,
                c3b4=false
                =}
            }
            else{
                {=
                c3b1=c3b3,
                c3b2=c3b4,
                c3b3=false,
                c3b4=false
                =}
            }
        }
        else{
            if(c3b3==false){
                {=
                c3b1=c3b2,
                c3b2=c3b4,
                c3b4=false
                =}
            }
            else{
                {=
                c3b1=c3b2,
                c3b2=c3b3,
                c3b3=c3b4,
                c3b4=false
                =}
            }
        }
    }
    else{
        if(c3b2==false){
            if(c3b3==false){
                {=
                c3b2=c3b4,
                c3b4=false    
                =}
            }
            else{
                {=
                c3b2=c3b3,
                c3b3=c3b4,
                c3b4=false
                =}
            }
        }
        else{
            if(c3b3==false){
                {=
                c3b3=c3b4,
                c3b4=false
                =}
            }
            else{
                tau
            }
        }
    }
} 


process Arbiter(){                      //need to figure out how to work the priority
    northbuf(ca1, ca2, ca3, ca4);   //add in a ca0 variable
    southbuf(ca1, ca2, ca3, ca4);
    eastbuf(ca1, ca2, ca3, ca4);
    westbuf(ca1, ca2, ca3, ca4);

    if(ca0==false&&ca1==false&&ca2==false&&ca3==false&&ca4==false){ //priority north, east, south, west
        {=
            
        =}
    }
    else if(ca0==false&&ca1==false&&ca2==false&&ca3==false&&ca4==true){ //priority...
        {=

        =}
    }
    else if(ca0==false&&ca1==false&&ca2==false&&ca3==true&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==false&&ca2==false&&ca3==true&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==false&&ca2==true&&ca3==false&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==false&&ca2==true&&ca3==false&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==false&&ca2==true&&ca3==true&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==false&&ca2==true&&ca3==true&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==true&&ca2==false&&ca3==false&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==true&&ca2==false&&ca3==false&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==true&&ca2==false&&ca3==true&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==true&&ca2==false&&ca3==true&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==true&&ca2==true&&ca3==false&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==true&&ca2==true&&ca3==false&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==true&&ca2==true&&ca3==true&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==false&&ca1==true&&ca2==true&&ca3==true&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==false&&ca2==false&&ca3==false&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==false&&ca2==false&&ca3==false&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==false&&ca2==false&&ca3==true&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==false&&ca2==false&&ca3==true&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==false&&ca2==true&&ca3==false&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==false&&ca2==true&&ca3==false&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==false&&ca2==true&&ca3==true&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==false&&ca2==true&&ca3==true&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==true&&ca2==false&&ca3==false&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==true&&ca2==false&&ca3==false&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==true&&ca2==false&&ca3==true&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==true&&ca2==false&&ca3==true&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==true&&ca2==true&&ca3==false&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==true&&ca2==true&&ca3==false&&ca4==true){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==true&&ca2==true&&ca3==true&&ca4==false){ //priority...
        {=
            
        =}
    }
    else if(ca0==true&&ca1==true&&ca2==true&&ca3==true&&ca4==true){ //priority...
        {=
            
        =}
    }
    else{tau};

    if(c0Serviced&&c1Serviced&&c2Serviced&&c3Serviced){  //this part needs work
        {=
           optimalRuns++
        =}
    }
    else{
        {=
            
        =}
    }

}

process northbuf(bool a0, bool a1, bool a2, bool a3, bool a4){


}

process southbuf(bool a0, bool a1, bool a2, bool a3, bool a4){


}

process eastbuf(bool a0, bool a1, bool a2, bool a3, bool a4){


}

process westbuf(bool a0, bool a1, bool a2, bool a3, bool a4){


}
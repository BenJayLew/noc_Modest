//version of the concrete model used to calculate transition probabilities for the 13 state model

datatype buffer = {int(-1..3) val, int(0..3) id, bool serviced, int(0..3) priority, int timesServiced};		//Datatype for a buffer with the next buffer value, id of the buffer, whether the buffer was serviced last clock cycle or not, and the priority number of the buffer
int unserviced;		//Number of unserviced buffers, iterates down when unserviced buffer's priority is set
int totalUnserviced;	//Total number of unserviced buffers in a clock cycle
int totalServiced = 0;
int optimalRuns = 0;
const int clkLower = 100; 
const int clkUpper = 102;
int(clkLower..clkUpper) clk;

int(0..12) state = 0; 		//0-0, 1-1a, 2-1b, 3-1c, 4-3a, 5-3b, 6-2a, 7-2b, 8-2c, 9-2d, 10-2e, 11-2f, 12-2g
int(0..12) pstate = 0;

buffer north, east, south, west;

buffer[] a; // = [north, east, south, west]; 	//Array of the four buffers. a[0] is the highest priority
buffer[] temp;		//Temporary buffer used to update buffer a

action tick;

// ------ Begin: properties ---------
//property Pr1 = Pmax(<> (clk >= clkUpper));

property TotalServiced = Pmax(<> (totalServiced >= ((clkUpper-clkLower)*3)));		//Probablility that the arbiter servieces at least 15 buffers out of a possible 20. probablity the arbiter is at least 75% efficient

//property conflict1 = Pmax(<> (totalUnserviced == 1 && clk >= clkUpper));

//property conflict2 = Pmax(<> (totalUnserviced == 2 && clk >= clkUpper));

//property triway = Pmax(<> (tri == true && clk >= clkUpper));

//1 clock cycle

//from state 0
/*
property State0 = Pmax(<> ((clk >= clkUpper) && (state == 0)));
property State1a = Pmax(<> ((clk >= clkUpper) && (state == 1)));
property State1b = Pmax(<> ((clk >= clkUpper) && (state == 2)));
property State1c = Pmax(<> ((clk >= clkUpper) && (state == 3)));
property State3a = Pmax(<> ((clk >= clkUpper) && (state == 4)));
property State3b = Pmax(<> ((clk >= clkUpper) && (state == 5)));
property State2a = Pmax(<> ((clk >= clkUpper) && (state == 6)));
property State2b = Pmax(<> ((clk >= clkUpper) && (state == 7)));
property State2c = Pmax(<> ((clk >= clkUpper) && (state == 8)));
property State2d = Pmax(<> ((clk >= clkUpper) && (state == 9)));
property State2e = Pmax(<> ((clk >= clkUpper) && (state == 10)));
property State2f = Pmax(<> ((clk >= clkUpper) && (state == 11)));
property State2g = Pmax(<> ((clk >= clkUpper) && (state == 12)));
*/

//2 clock cycles

// from state 1a 
/*
property State1a_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 0)));
property State1a_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 1)));
property State1a_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 2)));
property State1a_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 3)));
property State1a_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 4)));
property State1a_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 5)));
property State1a_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 6)));
property State1a_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 7)));
property State1a_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 8)));
property State1a_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 9)));
property State1a_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 10)));
property State1a_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 11)));
property State1a_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 1) && (state == 12)));
*/

// from state 1b
/*
property State1b_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 0)));
property State1b_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 1)));
property State1b_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 2)));
property State1b_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 3)));
property State1b_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 4)));
property State1b_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 5)));
property State1b_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 6)));
property State1b_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 7)));
property State1b_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 8)));
property State1b_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 9)));
property State1b_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 10)));
property State1b_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 11)));
property State1b_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 2) && (state == 12)));
*/

// from state 1c
/*
property State1c_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 0)));
property State1c_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 1)));
property State1c_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 2)));
property State1c_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 3)));
property State1c_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 4)));
property State1c_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 5)));
property State1c_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 6)));
property State1c_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 7)));
property State1c_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 8)));
property State1c_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 9)));
property State1c_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 10)));
property State1c_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 11)));
property State1c_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 3) && (state == 12)));
*/

// from state 3a
/*
property State3a_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 0)));
property State3a_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 1)));
property State3a_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 2)));
property State3a_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 3)));
property State3a_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 4)));
property State3a_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 5)));
property State3a_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 6)));
property State3a_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 7)));
property State3a_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 8)));
property State3a_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 9)));
property State3a_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 10)));
property State3a_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 11)));
property State3a_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 4) && (state == 12)));
*/

// from state 3b
/*
property State3b_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 0)));
property State3b_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 1)));
property State3b_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 2)));
property State3b_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 3)));
property State3b_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 4)));
property State3b_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 5)));
property State3b_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 6)));
property State3b_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 7)));
property State3b_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 8)));
property State3b_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 9)));
property State3b_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 10)));
property State3b_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 11)));
property State3b_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 5) && (state == 12)));
*/

// from state 2a
/*
property State2a_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 0)));
property State2a_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 1)));
property State2a_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 2)));
property State2a_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 3)));
property State2a_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 4)));
property State2a_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 5)));
property State2a_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 6)));
property State2a_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 7)));
property State2a_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 8)));
property State2a_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 9)));
property State2a_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 10)));
property State2a_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 11)));
property State2a_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 6) && (state == 12)));
*/

// from state 2b
/*
property State2b_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 0)));
property State2b_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 1)));
property State2b_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 2)));
property State2b_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 3)));
property State2b_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 4)));
property State2b_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 5)));
property State2b_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 6)));
property State2b_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 7)));
property State2b_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 8)));
property State2b_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 9)));
property State2b_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 10)));
property State2b_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 11)));
property State2b_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 7) && (state == 12)));
*/

// from state 2c - 8
/*
property State2c_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 0)));
property State2c_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 1)));
property State2c_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 2)));
property State2c_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 3)));
property State2c_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 4)));
property State2c_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 5)));
property State2c_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 6)));
property State2c_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 7)));
property State2c_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 8)));
property State2c_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 9)));
property State2c_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 10)));
property State2c_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 11)));
property State2c_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 8) && (state == 12)));
*/

// from state 2d
/*
property State2d_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 0)));
property State2d_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 1)));
property State2d_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 2)));
property State2d_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 3)));
property State2d_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 4)));
property State2d_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 5)));
property State2d_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 6)));
property State2d_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 7)));
property State2d_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 8)));
property State2d_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 9)));
property State2d_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 10)));
property State2d_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 11)));
property State2d_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 9) && (state == 12)));
*/

// from state 2e
/*
property State2e_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 0)));
property State2e_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 1)));
property State2e_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 2)));
property State2e_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 3)));
property State2e_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 4)));
property State2e_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 5)));
property State2e_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 6)));
property State2e_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 7)));
property State2e_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 8)));
property State2e_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 9)));
property State2e_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 10)));
property State2e_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 11)));
property State2e_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 10) && (state == 12)));
*/

// from state 2f
/*
property State2f_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 0)));
property State2f_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 1)));
property State2f_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 2)));
property State2f_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 3)));
property State2f_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 4)));
property State2f_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 5)));
property State2f_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 6)));
property State2f_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 7)));
property State2f_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 8)));
property State2f_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 9)));
property State2f_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 10)));
property State2f_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 11)));
property State2f_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 11) && (state == 12)));
*/

// from state 2g

property State2g_0 = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 0)));
property State2g_1a = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 1)));
property State2g_1b = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 2)));
property State2g_1c = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 3)));
property State2g_3a = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 4)));
property State2g_3b = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 5)));
property State2g_2a = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 6)));
property State2g_2b = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 7)));
property State2g_2c = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 8)));
property State2g_2d = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 9)));
property State2g_2e = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 10)));
property State2g_2f = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 11)));
property State2g_2g = Pmax(<> ((clk >= clkUpper) && (pstate == 12) && (state == 12)));






//property Runs1 = Pmax(<> (optimalRuns == 1));		//Probablility that there was at least 1 cycle where all buffers were serviced
//property Runs2 = Pmax(<> (optimalRuns == 2));		//Probablility that there was at least 2 cycles where all buffers were serviced
//property Runs3 = Pmax(<> (optimalRuns == 3));		//Probablility that there was at least 3 cycles where all buffers were serviced
//property Runs4 = Pmax(<> (optimalRuns == 4));		//Probablility that there was at least 4 cycles where all buffers were serviced
//property Runs5 = Pmax(<> (optimalRuns == 5));		//Probablility that there was at least 5 cycles where all buffers were serviced
// ------ End: properties ---------

process Clock(){	
	/*
	do {
	tick
	}
	*/
	tick {= clk++ =};
	if (clk <= clkUpper) {
	   Clock()
	}
	else {
	   stop
	}   
	
}


//Main process for the arbiter -------------------------------------------------------------------------------------------------------------------------------------------------
process Arbiter(){
	initialize();
	
	//runtime loop
	do {
		//Service buffers-------------------------------------------------------------------------------------------------------
		
		//Buffer priority 0
		//<Service Buffer a[0]>--------------------------------------------------------
		{= 
		a[0].timesServiced++,
		a[0].serviced = true 
		=};
		
		//<Service buffer <a[1]> ------------------------------------------------------
		if( a[1].val == a[0].val) {			//If buffer a[1] conflicts with a[0]
			{= 
			a[1].serviced = false,
			unserviced++ 		//Increment unserviced
			=}
		}
		else {
			{= 
			a[1].timesServiced++,		//Service Buffer
			a[1].serviced = true 
			=}
		};
		
		//<Service buffer a[2]> --------------------------------------------------------
		//If buffer a[2] conflicts with a[1] or a[0]
		if(a[2].val == a[1].val || a[2].val == a[0].val){	
			{= 
			a[2].serviced = false, 
			unserviced++			//Increment unserviced
			=}
		}
		else {
			{= 
			a[2].timesServiced++,		//Service Buffer
			a[2].serviced = true 
			=}
		};
		
		//<Service buffer a[3]> ---------------------------------------------------------
		//If buffer a[3] conflicts with a[2], a[1], or a[0]
		if( a[3].val == a[2].val || a[3].val == a[1].val || a[3].val == a[0].val){	
			{= 
			a[3].serviced = false,
			unserviced++ 			//Increment unserviced
			=}
		}
		else {
			{= 
			a[3].timesServiced++,		//Service Buffer
			a[3].serviced = true 
			=}
		};
		
		/*
		{= 
		totalUnserviced = unserviced,
		totalServiced = totalServiced + 4 - unserviced
		=};
		*/
		{= pstate = state =};
		
		//Increment optimal runs if there were no conflitcs -------------------------------------------------------------------
		
		if(unserviced == 0) {
			{= 
			optimalRuns++,
			totalUnserviced = unserviced,
			totalServiced = totalServiced + 4 - unserviced
			=}
		}
		else{
			{= 
			totalUnserviced = unserviced,
			totalServiced = totalServiced + 4 - unserviced
			=}
		};
		
		
		
		//Set priority values for the next run and update the value of the buffers----------------------------------------------
		setPriority(0);
		setPriority(1);
		setPriority(2);
		setPriority(3);
		
		
		
		
		//Rewrite buffer array with new priority values-------------------------------------------------------------------------
		{= 
		temp[a[0].priority] = a[0],
		temp[a[1].priority] = a[1],
		temp[a[2].priority] = a[2],
		temp[a[3].priority] = a[3] 
		=};
		
		{= a = temp =};
		
		//set state variable
		if(totalUnserviced == 0){			//0
			{= state = 0 =}
		}
		else if(totalUnserviced == 1){
			if(a[0].val == a[1].id){		//1a
				{= state = 1 =}
			}
			else if(a[0].val == a[2].id){	//1b
				{= state = 2 =}
			}
			else if(a[0].val == a[3].id){							//1c
				{= state = 3 =}
			}
			else { tau }
		}
		else { 
			if(a[0].val == a[1].val){		//3
				if(a[0].val == a[2].id){	//3a
					{= state = 4 =}
				}
				else {						//3b
					{= state = 5 =}
				}
			}
			else{													//2
				if(a[0].val == a[1].id && a[1].val == a[0].id){		//2a
					{= state = 6 =}		
				}
				else if(a[0].val == a[2].id && a[1].val == a[3].id){	//2b
					{= state = 7 =} 
				}
				else if(a[0].val == a[3].id && a[1].val == a[2].id){	//2c
					{= state = 8 =}
				}
				else if (a[0].val == a[1].id && a[1].val == a[2].id){		//2d
					{= state = 9 =}
				}
				else if(a[0].val == a[1].id && a[1].val == a[3].id){		//2e
					{= state = 10 =}
				}
				else if(a[0].val == a[2].id && a[1].val == a[0].id){		//2f
					{= state = 11 =}
				}
				else {													//2g
					{= state = 12 =}
				}
			}
		};		
		tick;
		
		if (clk >= clkUpper) {
			stop
		}
		else {
			tau
		}
		
		
	}
}

//initialize values -------------------------------------------------------------------------------------------------------------------------------------------------------------
process initialize(){
	{= 
	a = [north, east, south, west],
	temp = [north, east, south, west], 
	
	a[0].id = 0, 
	a[1].id = 1, 
	a[2].id = 2, 
	a[3].id = 3,  
	
	
	a[0].val = DiscreteUniform(1, 3),
	a[1].val = (DiscreteUniform(1, 3) + 1) % 4,
	a[2].val = (DiscreteUniform(1, 3) + 2) % 4,
	a[3].val = DiscreteUniform(0, 2),
	
	
	unserviced = 0
	=}

	
}

//Sets the new priority value of buffer a[i] and updates the value if the buffer was serviced ------------------------------------------------------------------------------------
process setPriority(int i){
	if (a[i].serviced == true){
		{= 
		a[i].val = (DiscreteUniform(1, 3) + a[i].id) % 4,	//Update value	
		a[i].priority = i + unserviced 						//Set new priority
		=}
		//<update buffer value and dequeue buffer>
	}
	else {
		{= 
		a[i].priority = totalUnserviced - unserviced,		//Set new priority
		unserviced-- 						//decrement unserviced
		=}
	}
}


par{
::	Clock()
::	Arbiter()
}

option "dtmc";

const int clkLower = 100; 
const int clkUpper = 112;
int(clkLower..clkUpper) clk;

action tick;

//Represent the destination of the package from the producer. 0 represents no package
int(0..5) producer, router1, router2, consumer1, consumer2, consumer3, consumer4, consumer5;
int(0..(clkUpper - clkLower)) packagesReceived = 0;
/*
				producer
					|
				 router1
				/	|   \
		consumer1	|  	 \
					|     \
			  	consumer2  \
							\
						 router2
						/   |   \
				consumer3	|	 \
							|	  \
						consumer4  \
									\
									consumer5
*/

// ------ Begin: properties ---------
property p1 = Pmax(<> (clk >= clkUpper));
property consumer5 = Pmax(<> (consumer5 != 0));
// ------ End: properties ---------

process Clock(){
	
	tick {= clk++ =};
	if (clk <= clkUpper) {
	   Clock()
	}
	else {
	   stop
	} 
	
}

process Top(){
	do{
		//consumers consume the values and reset to 0 -----------------------------------------
		if(consumer1 == 1){
			{=
			consumer1 = 0,
			packagesReceived++
			=}
		}
		else{tau};
		
		if(consumer2 == 2){
			{=
			consumer2 = 0,
			packagesReceived++
			=}
		}
		else{tau};
		
		if(consumer3 == 3){
			{=
			consumer3 = 0,
			packagesReceived++
			=}
		}
		else{tau};
		
		if(consumer4 == 4){
			{=
			consumer4 = 0,
			packagesReceived++
			=}
		}
		else{tau};
		
		if(consumer5 == 5){
			{=
			consumer5 = 0,
			packagesReceived++
			=}
		}
		else{tau};
		
		//Router 2 forwards packages depending on thier destination, namely consumers 3, 4, and 5.
		if(router2 == 3){
			{=
			consumer3 = router2,
			router2 = 0
			=}
		}
		else if(router2 == 4){
			{=
			consumer4 = router2,
			router2 = 0
			=}
		}
		else if(router2 == 5){
			{=
			consumer5 = router2,
			router2 = 0
			=}
		}
		else{tau};
	
		//Router 1 forwards packages depending on thier destination, namely consumers 1, 2, and router 2.
		if(router1 == 1){
			{=
			consumer1 = router1,
			router1 = 0
			=}
		}
		else if(router1 == 2){
			{=
			consumer2 = router1,
			router1 = 0
			=}
		}
		else if(router1 == 3 || router1 == 4 || router1 == 5){
			{=
			router2 = router1,
			router1 = 0
			=}
		}
		else {tau};
		
		//producer forwards the package to router 1 and producer creates a new random package.
		{=
		router1 = DiscreteUniform(0, 5)
		=};
		
		tick;
		
		if(clk>=clkUpper){
			stop
		}	
		else{
			tau
		} 
	}

}

par{
::	Clock()
:: 	Top()
}

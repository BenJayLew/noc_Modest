//full 13 state model (may be reduced)

const int clkLower = 100; 
const int clkUpper = 101;
int(clkLower..clkUpper) clk;


int(0..(clkUpper - clkLower)) optimalRuns = 0;

//0- no conflict, 1- one confilct, 2- three-way conflict, 3 - two pairs[2a, both unserviced buffers point to eachother], 
//4 - two pairs[2b, both unserviced buffers point to the serviced buffers], 5 - two pairs[2c, one unserviced buffer points to the other underviced buffer, which points to a serviced buffer]
int(0..12) state = 0;


action tick;

// ------ Begin: properties ---------
property Pr1 = Pmax(<> (clk >= clkUpper));

//property TotalServiced = Pmax(<> (totalServiced >= ((clkUpper-clkLower)*3)));

property Runs1 = Pmax(<> (optimalRuns == 1));
//property Runs2 = Pmax(<> (optimalRuns == 2));
//property Runs3 = Pmax(<> (optimalRuns == 3));	
//property Runs4 = Pmax(<> (optimalRuns == 4));
//property Runs5 = Pmax(<> (optimalRuns == 5));
// ------ End: properties -----------


process Clock(){	

	tick {= clk++ =};
	if (clk <= clkUpper) {
	   Clock()
	}
	else {
	   stop
	}   
	
}

process Arbiter(){
	
	//runtime loop
	do {
		
		if (state == 0){
			palt{
				:( 1/9 ): {= state = 0, optimalRuns++ =}
				:( 4/27): {= state = 1 =} 
				:(16/81): {= state = 2 =}
				:(20/81): {= state = 3 =}
				:( 1/27): {= state = 4 =}
				:( 3/81): {= state = 5 =}
				:( 2/81): {= state = 6 =}
				:( 1/81): {= state = 7 =}
				:( 1/81): {= state = 8 =}
				:( 2/81): {= state = 9 =}
				:( 1/27): {= state = 10 =}
				:( 1/9 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		else if(state == 1){
			palt{
				:( 1/9 ): {= state = 0, optimalRuns++ =}
				:( 4/27): {= state = 1 =} 
				:( 8/27): {= state = 2 =}
				:( 4/27): {= state = 3 =}
				//:( 0 ): {= state = 4 =}
				:( 2/27): {= state = 5 =}
				//:( 0 ): {= state = 6 =}
				:( 1/27): {= state = 7 =}
				//:( 0 ): {= state = 8 =}
				:( 1/27): {= state = 9 =}
				:( 1/27): {= state = 10 =}
				:( 1/9 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		else if(state == 2){
			palt{
				:( 1/9 ): {= state = 0, optimalRuns++ =}
				:( 4/27): {= state = 1 =} 
				:( 2/9 ): {= state = 2 =}
				:( 2/9 ): {= state = 3 =}
				:( 1/27): {= state = 4 =}
				:( 1/27): {= state = 5 =}
				//:( 0 ): {= state = 6 =}
				//:( 0 ): {= state = 7 =}
				:( 1/27): {= state = 8 =}
				:( 1/27): {= state = 9 =}
				:( 1/27): {= state = 10 =}
				:( 1/9 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		else if(state == 3){
			palt{
				:( 1/9 ): {= state = 0, optimalRuns++ =}
				:( 4/27): {= state = 1 =} 
				:( 2/27): {= state = 2 =}
				:(10/27): {= state = 3 =}
				:( 2/27): {= state = 4 =}
				//:( 0 ): {= state = 5 =}
				:( 2/27): {= state = 6 =}
				//:( 0 ): {= state = 7 =}
				:( 1/81): {= state = 8 =}
				//:( 0 ): {= state = 9 =}
				:( 1/27): {= state = 10 =}
				:( 1/9 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		else if(state == 4){
			palt{
				:( 1/9 ): {= state = 0, optimalRuns++ =}
				:( 2/9 ): {= state = 1 =} 
				:( 2/9 ): {= state = 2 =}
				//:( 0 ): {= state = 3 =}
				//:( 0 ): {= state = 4 =}
				:( 2/9 ): {= state = 5 =}
				//:( 0 ): {= state = 6 =}
				//:( 0 ): {= state = 7 =}
				//:( 0 ): {= state = 8 =}
				//:( 0 ): {= state = 9 =}
				:( 1/9 ): {= state = 10 =}
				:( 1/9 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		else if(state == 5){
			palt{
				:( 2/9 ): {= state = 0, optimalRuns++ =}
				:( 1/9 ): {= state = 1 =} 
				:( 1/9 ): {= state = 2 =}
				:( 4/9 ): {= state = 3 =}
				:( 1/9 ): {= state = 4 =}
				//:( 0 ): {= state = 5 =}
				//:( 0 ): {= state = 6 =}
				//:( 0 ): {= state = 7 =}
				//:( 0 ): {= state = 8 =}
				//:( 0 ): {= state = 9 =}
				//:( 0 ): {= state = 10 =}
				//:( 0 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		else if(state == 6){
			palt{
				:( 1/9 ): {= state = 0, optimalRuns++ =}
				:( 1/9 ): {= state = 1 =} 
				:( 1/3 ): {= state = 2 =}
				:( 2/9 ): {= state = 3 =}
				//:( 0 ): {= state = 4 =}
				//:( 0 ): {= state = 5 =}
				//:( 0 ): {= state = 6 =}
				//:( 0 ): {= state = 7 =}
				//:( 0 ): {= state = 8 =}
				:( 1/9 ): {= state = 9 =}
				//:( 0 ): {= state = 10 =}
				:( 1/9 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		else if(state == 7){
			palt{
				:( 1/9 ): {= state = 0, optimalRuns++ =}
				:( 1/9 ): {= state = 1 =} 
				:( 1/3 ): {= state = 2 =}
				:( 2/9 ): {= state = 3 =}
				//:( 0 ): {= state = 4 =}
				//:( 0 ): {= state = 5 =}
				//:( 0 ): {= state = 6 =}
				:( 1/9 ): {= state = 7 =}
				//:( 0 ): {= state = 8 =}
				//:( 0 ): {= state = 9 =}
				//:( 0 ): {= state = 10 =}
				:( 1/9 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		else if(state == 8){
			palt{
				:( 1/9 ): {= state = 0, optimalRuns++ =}
				:( 1/3 ): {= state = 1 =} 
				:( 1/9 ): {= state = 2 =}
				:( 2/9 ): {= state = 3 =}
				//:( 0 ): {= state = 4 =}
				//:( 0 ): {= state = 5 =}
				//:( 0 ): {= state = 6 =}
				//:( 0 ): {= state = 7 =}
				:( 1/9 ): {= state = 8 =}
				//:( 0 ): {= state = 9 =}
				:( 1/9 ): {= state = 10 =}
				//:( 0 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		else if(state == 9){
			palt{
				:( 1/9 ): {= state = 0, optimalRuns++ =}
				:( 1/3 ): {= state = 1 =} 
				:( 1/9 ): {= state = 2 =}
				:( 2/9 ): {= state = 3 =}
				//:( 0 ): {= state = 4 =}
				//:( 0 ): {= state = 5 =}
				:( 1/9 ): {= state = 6 =}
				//:( 0 ): {= state = 7 =}
				//:( 0 ): {= state = 8 =}
				//:( 0 ): {= state = 9 =}
				:( 1/9 ): {= state = 10 =}
				//:( 0 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		else if(state == 10){
			palt{
				//:( 0 ): {= state = 0, optimalRuns++ =}
				//:( 0 ): {= state = 1 =} 
				:( 4/9 ): {= state = 2 =}
				//:( 0 ): {= state = 3 =}
				//:( 0 ): {= state = 4 =}
				:( 1/9 ): {= state = 5 =}
				//:( 0 ): {= state = 6 =}
				//:( 0 ): {= state = 7 =}
				//:( 0 ): {= state = 8 =}
				:( 1/9 ): {= state = 9 =}
				//:( 0 ): {= state = 10 =}
				:( 1/3 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		else if(state == 11){
			palt{
				//:( 0 ): {= state = 0, optimalRuns++ =}
				//:( 0 ): {= state = 1 =} 
				//:( 0 ): {= state = 2 =}
				:( 4/9 ): {= state = 3 =}
				:( 1/9 ): {= state = 4 =}
				//:( 0 ): {= state = 5 =}
				:( 1/9 ): {= state = 6 =}
				//:( 0 ): {= state = 7 =}
				//:( 0 ): {= state = 8 =}
				//:( 0 ): {= state = 9 =}
				//:( 0 ): {= state = 10 =}
				:( 1/3 ): {= state = 11 =}
				//:(): {= state = 12 =} add in 13 state model
			}
		}
		/* add in 13 state model
		else if(state == 12){
			palt{
				:(): {= state = 0, optimalRuns++ =}
				:(): {= state = 1 =} 
				:(): {= state = 2 =}
				:(): {= state = 3 =}
				:(): {= state = 4 =}
				:(): {= state = 5 =}
				:(): {= state = 6 =}
				:(): {= state = 7 =}
				:(): {= state = 8 =}
				:(): {= state = 9 =}
				:(): {= state = 10 =}
				:(): {= state = 11 =}
				:(): {= state = 12 =}
			}
		}
		*/
		else {
			tau
		};
		
		
		
		tick;	
		
		if (clk >= clkUpper) {
			stop
		}
		else {
			tau
		}
		
	}
}


par{
::	Clock()
::	Arbiter()
}

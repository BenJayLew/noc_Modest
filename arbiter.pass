
//Arbiter
module arbiter

	 
	a0val : [0..3]; //value in head of buffer in position 0
	a0id : [0..3]; //id of buffer in position 0, 0-n, 1-e, 2-s, 3-w
	a0serviced : [0..1]; //boolean, 1 if serviced, 0 if not
	
	a1val : [0..3]; //value in head of buffer in position 1
	a1id : [0..3]; //id of buffer in position 1, 0-n, 1-e, 2-s, 3-w	
	a1serviced : [0..1]; //boolean, 1 if serviced, 0 if not
	
	a2val : [0..3]; //value in head of buffer in position 3
	a2id : [0..3]; //id of buffer in position 3, 0-n, 1-e, 2-s, 3-w	
	a2serviced : [0..1]; //boolean, 1 if serviced, 0 if not

	a3val : [0..3]; //value in head of buffer in position 3
	a3id : [0..3]; //id of buffer in position 3, 0-n, 1-e, 2-s, 3-w
	a3serviced : [0..1]; //boolean, 1 if serviced, 0 if not

	temp0val : [0..3]; //value in head of buffer in position 0
	temp0id : [0..3]; //id of buffer in position 0, 0-n, 1-e, 2-s, 3-w
	temp0serviced : [0..1]; //boolean, 1 if serviced, 0 if not
	
	temp1val : [0..3]; //value in head of buffer in position 1
	temp1id : [0..3]; //id of buffer in position 1, 0-n, 1-e, 2-s, 3-w	
	temp1serviced : [0..1]; //boolean, 1 if serviced, 0 if not
	
	temp2val : [0..3]; //value in head of buffer in position 3
	temp2id : [0..3]; //id of buffer in position 3, 0-n, 1-e, 2-s, 3-w	
	temp2serviced : [0..1]; //boolean, 1 if serviced, 0 if not

	temp3val : [0..3]; //value in head of buffer in position 3
	temp3id : [0..3]; //id of buffer in position 3, 0-n, 1-e, 2-s, 3-w
	temp3serviced : [0..1]; //boolean, 1 if serviced, 0 if not

	unserviced : [0..2]; //Number of unserviced buffers that decrements	
	totalUnserviced : [0..2]; //Number of unserviced buffers that does not decrement

	optimalRuns : [0..100]; //counter for cycles where all packets are serviced

	
	//state variable
	s : [0..14];


	//Insert packet generation here
	[] s=0 & a0serviced=1 & a0id=0 ->  
		  1/3 : (a0val'=1) & (s'=1)
		+ 1/3 : (a0val'=2) & (s'=1)
		+ 1/3 : (a0val'=3) & (s'=1);

	[] s=0 & a0serviced=1 & a0id=1 ->
		  1/3 : (a0val'=0) & (s'=1)
		+ 1/3 : (a0val'=2) & (s'=1)
		+ 1/3 : (a0val'=3) & (s'=1);
	
	[] s=0 & a0serviced=1 & a0id=2 ->
		  1/3 : (a0val'=1) & (s'=1)
		+ 1/3 : (a0val'=0) & (s'=1)
		+ 1/3 : (a0val'=3) & (s'=1);

	[] s=0 & a0serviced=1 & a0id=3 ->
		  1/3 : (a0val'=1) & (s'=1)
		+ 1/3 : (a0val'=2) & (s'=1)
		+ 1/3 : (a0val'=0) & (s'=1);


	[] s=1 & a1serviced=1 & a1id=0 ->
		  1/3 : (a1val'=1) & (s'=2)
		+ 1/3 : (a1val'=2) & (s'=2)
		+ 1/3 : (a1val'=3) & (s'=2);

	[] s=1 & a1serviced=1 & a1id=1 ->
		  1/3 : (a1val'=0) & (s'=2)
		+ 1/3 : (a1val'=2) & (s'=2)
		+ 1/3 : (a1val'=3) & (s'=2);
	
	[] s=1 & a1serviced=1 & a1id=2 ->
		  1/3 : (a1val'=1) & (s'=2)
		+ 1/3 : (a1val'=0) & (s'=2)
		+ 1/3 : (a1val'=3) & (s'=2);

	[] s=1 & a1serviced=1 & a1id=3 ->
		  1/3 : (a1val'=1) & (s'=2)
		+ 1/3 : (a1val'=2) & (s'=2)
		+ 1/3 : (a1val'=0) & (s'=2);
	
	
	[] s=2 & a2serviced=1 & a2id=0 ->
		  1/3 : (a2val'=1) & (s'=3)
		+ 1/3 : (a2val'=2) & (s'=3)
		+ 1/3 : (a2val'=3) & (s'=3);

	[] s=2 & a2serviced=1 & a2id=1 ->
		  1/3 : (a2val'=0) & (s'=3)
		+ 1/3 : (a2val'=2) & (s'=3)
		+ 1/3 : (a2val'=3) & (s'=3);
	
	[] s=2 & a2serviced=1 & a2id=2 ->
		  1/3 : (a2val'=1) & (s'=3)
		+ 1/3 : (a2val'=0) & (s'=3)
		+ 1/3 : (a2val'=3) & (s'=3);

	[] s=2 & a2serviced=1 & a2id=3 ->
		  1/3 : (a2val'=1) & (s'=3)
		+ 1/3 : (a2val'=2) & (s'=3)
		+ 1/3 : (a2val'=0) & (s'=3);
	
	
	[] s=3 & a3serviced=1 & a3id=0 ->
		  1/3 : (a3val'=1) & (s'=4)
		+ 1/3 : (a3val'=2) & (s'=4)
		+ 1/3 : (a3val'=3) & (s'=4);

	[] s=3 & a3serviced=1 & a3id=1 ->
		  1/3 : (a3val'=0) & (s'=4)
		+ 1/3 : (a3val'=2) & (s'=4)
		+ 1/3 : (a3val'=3) & (s'=4);
	
	[] s=3 & a3serviced=1 & a3id=2 ->
		  1/3 : (a3val'=1) & (s'=4)
		+ 1/3 : (a3val'=0) & (s'=4)
		+ 1/3 : (a3val'=3) & (s'=4);

	[] s=3 & a3serviced=1 & a3id=3 ->
		  1/3 : (a3val'=1) & (s'=4)
		+ 1/3 : (a3val'=2) & (s'=4)
		+ 1/3 : (a3val'=0) & (s'=4);

	//behaviors
	
	[] s=4 -> (a0serviced'=1) & (s'=5);

	[] s=5 & a0val = a1val -> (a1serviced'=0) & (s'=6);
	[] s=5 & a0val != a1val -> (a1serviced'=1) & (s'=6);


	[] s=6 & a0val = a2val | a1val = a2val -> (a2serviced'=0) & (s'=7);
	[] s=6 & a0val != a2val & a1val != a2val -> (a2serviced'=1) & (s'=7);
	

	[] s=7 & a0val = a3val | a1val = a3val | a2val = a3val -> (a3serviced'=0) & (s'=8);
	[] s=7 & a0val != a3val & a1val != a3val & a2val != a3val -> (a3serviced'=1) & (s'=8);



	//Set Priority

	[] s=8 -> (unserviced' = a0serviced + a1serviced + a2serviced + a3serviced) & (totalUnserviced' = a0serviced + a1serviced + a2serviced + a3serviced) & (s'=9);

	[] s=9 & (unserviced = 0) -> (optimalRuns'= optimalRuns + 1) & (s'=10);

	[] s=10 & (a0serviced = 1) & (unserviced = 0) -> (temp0val' = a0val) & (temp0id' = a0id) & (temp0serviced' = a0serviced) & (s'=11);
 	
	[] s=10 & (a0serviced = 1) & (unserviced = 1) -> (temp1val' = a0val) & (temp1id' = a0id) & (temp1serviced' = a0serviced) & (s'=11); 	

	[] s=10 & (a0serviced = 1) & (unserviced = 2) -> (temp2val' = a0val) & (temp2id' = a0id) & (temp2serviced' = a0serviced) & (s'=11); 	

	[] s=10 & (a0serviced = 0) & (totalUnserviced - unserviced = 0) -> (temp0serviced' = a0serviced) & (temp0val' = a0val) & (temp0id' = a0id) & (unserviced' = unserviced - 1) & (s'=11); 

	[] s=10 & (a0serviced = 0) & (totalUnserviced - unserviced = 1) -> (temp1serviced' = a0serviced) & (temp1val' = a0val) & (temp1id' = a0id) & (unserviced' = unserviced - 1) & (s'=11);

	[] s=10 & (a0serviced = 0) & (totalUnserviced - unserviced = 2) -> (temp2serviced' = a0serviced) & (temp2val' = a0val) & (temp2id' = a0id) & (unserviced' = unserviced - 1) & (s'=11);


	[] s=11 & (a1serviced = 1) & (unserviced = 0) -> (temp1val' = a1val) & (temp1id' = a1id) & (temp1serviced' = a1serviced) & (s'=12);
 	
	[] s=11 & (a1serviced = 1) & (unserviced = 1) -> (temp2val' = a1val) & (temp2id' = a1id) & (temp2serviced' = a1serviced) & (s'=12); 	

	[] s=11 & (a1serviced = 1) & (unserviced = 1) -> (temp3val' = a1val) & (temp3id' = a1id) & (temp3serviced' = a1serviced) & (s'=12);
 	
	[] s=11 & (a1serviced = 0) & (totalUnserviced - unserviced = 0) -> (temp0serviced' = a1serviced) & (temp0val' = a1val) & (temp0id' = a1id) & (unserviced' = unserviced - 1) & (s'=12); 

	[] s=11 & (a1serviced = 0) & (totalUnserviced - unserviced = 1) -> (temp1serviced' = a1serviced) & (temp1val' = a1val) & (temp1id' = a1id) & (unserviced' = unserviced - 1) & (s'=12);

	[] s=11 & (a1serviced = 0) & (totalUnserviced - unserviced = 2) -> (temp2serviced' = a1serviced) & (temp2val' = a1val) & (temp2id' = a1id) & (unserviced' = unserviced - 1) & (s'=12);

 
	[] s=12 & (a2serviced = 1) & (unserviced = 0) -> (temp2val' = a2val) & (temp2id' = a2id) & (temp2serviced' = a2serviced) & (s'=13);
 	
	[] s=12 & (a2serviced = 1) & (unserviced = 1) -> (temp3val' = a2val) & (temp3id' = a2id) & (temp3serviced' = a2serviced) & (s'=13); 	

	[] s=12 & (a2serviced = 0) & (totalUnserviced - unserviced = 0) -> (temp0serviced' = a2serviced) & (temp0val' = a2val) & (temp0id' = a2id) & (unserviced' = unserviced - 1) & (s'=13); 

	[] s=12 & (a2serviced = 0) & (totalUnserviced - unserviced = 1) -> (temp1serviced' = a2serviced) & (temp1val' = a2val) & (temp1id' = a2id) & (unserviced' = unserviced - 1) & (s'=13);

	[] s=12 & (a2serviced = 0) & (totalUnserviced - unserviced = 2) -> (temp2serviced' = a2serviced) & (temp2val' = a2val) & (temp2id' = a2id) & (unserviced' = unserviced - 1) & (s'=13);

 
	[] s=13 & (a3serviced = 1) & (unserviced = 0) -> (temp3val' = a3val) & (temp3id' = a3id) & (temp3serviced' = a3serviced) & (s'=14);
 	
	[] s=13 & (a3serviced = 0) & (totalUnserviced - unserviced = 0) -> (temp0serviced' = a3serviced) & (temp0val' = a3val) & (temp0id' = a3id) & (unserviced' = unserviced - 1) & (s'=14); 

	[] s=13 & (a3serviced = 0) & (totalUnserviced - unserviced = 1) -> (temp1serviced' = a3serviced) & (temp1val' = a3val) & (temp1id' = a3id) & (unserviced' = unserviced - 1) & (s'=14);

	[] s=13 & (a3serviced = 0) & (totalUnserviced - unserviced = 2) -> (temp2serviced' = a3serviced) & (temp2val' = a3val) & (temp2id' = a3id) & (unserviced' = unserviced - 1) & (s'=14);

	
	//copy temp arbiter to actual arbiter

	[] s=14 -> (a0val' = temp0val) & (a0id' = temp0id) & (a0serviced' = temp0serviced) & (a1val' = temp1val) & (a1id' = temp1id) & (a1serviced' = temp1serviced) & (a2val' = temp2val) & (a2id' = temp2id) & (a2serviced' = temp2serviced) & (a3val' = temp3val) & (a3id' = temp3id) & (a3serviced' = temp3serviced) & (s'=0);

endmodule


pred
 (unserviced = 0)
,((unserviced + (-1)) = 0)
,((unserviced + (-2)) = 0)
,((a0val - a1val) = 0);

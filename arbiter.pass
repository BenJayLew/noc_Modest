
//Arbiter
module arbiter

	 
	a0.val : [0..3]; //value in head of buffer in position 0
	a0.id : [0..3]; //id of buffer in position 0, 0-n, 1-e, 2-s, 3-w
	a0.serviced : [0..1] //boolean, 1 if serviced, 0 if not
	
	a1.val : [0..3]; //value in head of buffer in position 1
	a1.id : [0..3]; //id of buffer in position 1, 0-n, 1-e, 2-s, 3-w	
	a1.serviced : [0..1] //boolean, 1 if serviced, 0 if not
	
	a2.val : [0..3]; //value in head of buffer in position 3
	a2.id : [0..3]; //id of buffer in position 3, 0-n, 1-e, 2-s, 3-w	
	a2.serviced : [0..1] //boolean, 1 if serviced, 0 if not

	a3.val : [0..3]; //value in head of buffer in position 3
	a3.id : [0..3]; //id of buffer in position 3, 0-n, 1-e, 2-s, 3-w
	a3.serviced : [0..1] //boolean, 1 if serviced, 0 if not

	temp0.val : [0..3]; //value in head of buffer in position 0
	temp0.id : [0..3]; //id of buffer in position 0, 0-n, 1-e, 2-s, 3-w
	temp0.serviced : [0..1] //boolean, 1 if serviced, 0 if not
	
	temp1.val : [0..3]; //value in head of buffer in position 1
	temp1.id : [0..3]; //id of buffer in position 1, 0-n, 1-e, 2-s, 3-w	
	temp1.serviced : [0..1] //boolean, 1 if serviced, 0 if not
	
	temp2.val : [0..3]; //value in head of buffer in position 3
	temp2.id : [0..3]; //id of buffer in position 3, 0-n, 1-e, 2-s, 3-w	
	temp2.serviced : [0..1] //boolean, 1 if serviced, 0 if not

	temp3.val : [0..3]; //value in head of buffer in position 3
	temp3.id : [0..3]; //id of buffer in position 3, 0-n, 1-e, 2-s, 3-w
	temp3.serviced : [0..1] //boolean, 1 if serviced, 0 if not

	unserviced : [0..2] //Number of unserviced buffers that decrements	
	totalUnserviced : [0..2] //Number of unserviced buffers that does not decrement

	\\Insert packet generation here
	[] a0.serviced=1 & a0.id=0 ->
		  1/3 : (a0.val'=1)
		+ 1/3 : (a0.val'=2)
		+ 1/3 : (a0.val'=3);

	[] a0.serviced=1 & a0.id=1 ->
		  1/3 : (a0.val'=0)
		+ 1/3 : (a0.val'=2)
		+ 1/3 : (a0.val'=3);
	
	[] a0.serviced=1 & a0.id=2 ->
		  1/3 : (a0.val'=1)
		+ 1/3 : (a0.val'=0)
		+ 1/3 : (a0.val'=3);

	[] a0.serviced=1 & a0.id=3 ->
		  1/3 : (a0.val'=1)
		+ 1/3 : (a0.val'=2)
		+ 1/3 : (a0.val'=0);


	[] a1.serviced=1 & a1.id=0 ->
		  1/3 : (a1.val'=1)
		+ 1/3 : (a1.val'=2)
		+ 1/3 : (a1.val'=3);

	[] a1.serviced=1 & a1.id=1 ->
		  1/3 : (a1.val'=0)
		+ 1/3 : (a1.val'=2)
		+ 1/3 : (a1.val'=3);
	
	[] a1.serviced=1 & a1.id=2 ->
		  1/3 : (a1.val'=1)
		+ 1/3 : (a1.val'=0)
		+ 1/3 : (a1.val'=3);

	[] a1.serviced=1 & a1.id=3 ->
		  1/3 : (a1.val'=1)
		+ 1/3 : (a1.val'=2)
		+ 1/3 : (a1.val'=0);
	
	
	[] a2.serviced=1 & a2.id=0 ->
		  1/3 : (a2.val'=1)
		+ 1/3 : (a2.val'=2)
		+ 1/3 : (a2.val'=3);

	[] a2.serviced=1 & a2.id=1 ->
		  1/3 : (a2.val'=0)
		+ 1/3 : (a2.val'=2)
		+ 1/3 : (a2.val'=3);
	
	[] a2.serviced=1 & a2.id=2 ->
		  1/3 : (a2.val'=1)
		+ 1/3 : (a2.val'=0)
		+ 1/3 : (a2.val'=3);

	[] a2.serviced=1 & a2.id=3 ->
		  1/3 : (a2.val'=1)
		+ 1/3 : (a2.val'=2)
		+ 1/3 : (a2.val'=0);
	
	
	[] a3.serviced=1 & a3.id=0 ->
		  1/3 : (a3.val'=1)
		+ 1/3 : (a3.val'=2)
		+ 1/3 : (a3.val'=3);

	[] a3.serviced=1 & a3.id=1 ->
		  1/3 : (a3.val'=0)
		+ 1/3 : (a3.val'=2)
		+ 1/3 : (a3.val'=3);
	
	[] a3.serviced=1 & a3.id=2 ->
		  1/3 : (a3.val'=1)
		+ 1/3 : (a3.val'=0)
		+ 1/3 : (a3.val'=3);

	[] a3.serviced=1 & a3.id=3 ->
		  1/3 : (a3.val'=1)
		+ 1/3 : (a3.val'=2)
		+ 1/3 : (a3.val'=0);

	//behaviors
	
	[] 1=1 -> a0.serviced'=1;

	[] a0.val = a1.val -> a1.serviced'=0;
	[] a0.val != a1.val -> a1.serviced'=1;


	[] a0.val = a2.val | a1.val = a2.val -> a2.serviced'=0;
	[] a0.val != a2.val & a1.val != a2.val -> a2.serviced'=1;
	

	[] a0.val = a3.val | a1.val = a3.val | a2.val = a3.val -> a3.serviced'=0;
	[] a0.val != a3.val & a1.val != a3.val & a2.val != a3.val -> a3.serviced'=1;



	//Set Priority

	[] 1=1 -> (unserviced = a0.serviced + a1.serviced + a2.serviced + a3.serviced) & (totalUnserviced = a0.serviced + a1.serviced + a2.serviced + a3.serviced)

	[] (a0.serviced = 1) & (unserviced = 0) -> (temp0.val = a0.val) & (temp0.id = a0.id) & (temp0.serviced = a0.serviced)
 	
	[] (a0.serviced = 1) & (unserviced = 1) -> (temp1.val = a0.val) & (temp1.id = a0.id) & (temp1.serviced = a0.serviced) 	

	[] (a0.serviced = 1) & (unserviced = 2) -> (temp2.val = a0.val) & (temp2.id = a0.id) & (temp2.serviced = a0.serviced) 	

	[] (a0.serviced = 0) & (totalUnserviced - unserviced = 0) -> (temp0.serviced = a0.serviced) & (temp0.val = a0.val) & (temp0.id = a0.id) & (unserviced = unserviced - 1) 

	[] (a0.serviced = 0) & (totalUnserviced - unserviced = 1) -> (temp1.serviced = a0.serviced) & (temp1.val = a0.val) & (temp1.id = a0.id) & (unserviced = unserviced - 1)

	[] (a0.serviced = 0) & (totalUnserviced - unserviced = 2) -> (temp2.serviced = a0.serviced) & (temp2.val = a0.val) & (temp2.id = a0.id) & (unserviced = unserviced - 1)


	[] (a1.serviced = 1) & (unserviced = 0) -> (temp1.val = a1.val) & (temp1.id = a1.id) & (temp1.serviced = a1.serviced)
 	
	[] (a1.serviced = 1) & (unserviced = 1) -> (temp2.val = a1.val) & (temp2.id = a1.id) & (temp2.serviced = a1.serviced) 	

	[] (a1.serviced = 1) & (unserviced = 1) -> (temp3.val = a1.val) & (temp3.id = a1.id) & (temp3.serviced = a1.serviced)
 	
	[] (a1.serviced = 0) & (totalUnserviced - unserviced = 0) -> (temp0.serviced = a1.serviced) & (temp0.val = a1.val) & (temp0.id = a1.id) & (unserviced = unserviced - 1) 

	[] (a1.serviced = 0) & (totalUnserviced - unserviced = 1) -> (temp1.serviced = a1.serviced) & (temp1.val = a1.val) & (temp1.id = a1.id) & (unserviced = unserviced - 1)

	[] (a1.serviced = 0) & (totalUnserviced - unserviced = 2) -> (temp2.serviced = a1.serviced) & (temp2.val = a1.val) & (temp2.id = a1.id) & (unserviced = unserviced - 1)

 
	[] (a2.serviced = 1) & (unserviced = 0) -> (temp2.val = a2.val) & (temp2.id = a2.id) & (temp2.serviced = a2.serviced)
 	
	[] (a2.serviced = 1) & (unserviced = 1) -> (temp3.val = a2.val) & (temp3.id = a2.id) & (temp3.serviced = a2.serviced) 	

	[] (a2.serviced = 0) & (totalUnserviced - unserviced = 0) -> (temp0.serviced = a2.serviced) & (temp0.val = a2.val) & (temp0.id = a2.id) & (unserviced = unserviced - 1) 

	[] (a2.serviced = 0) & (totalUnserviced - unserviced = 1) -> (temp1.serviced = a2.serviced) & (temp1.val = a2.val) & (temp1.id = a2.id) & (unserviced = unserviced - 1)

	[] (a2.serviced = 0) & (totalUnserviced - unserviced = 2) -> (temp2.serviced = a2.serviced) & (temp2.val = a2.val) & (temp2.id = a2.id) & (unserviced = unserviced - 1)

 
	[] (a3.serviced = 1) & (unserviced = 0) -> (temp3.val = a3.val) & (temp3.id = a3.id) & (temp3.serviced = a3.serviced)
 	
	[] (a2.serviced = 0) & (totalUnserviced - unserviced = 0) -> (temp0.serviced = a2.serviced) & (temp0.val = a2.val) & (temp0.id = a2.id) & (unserviced = unserviced - 1) 

	[] (a2.serviced = 0) & (totalUnserviced - unserviced = 1) -> (temp1.serviced = a2.serviced) & (temp1.val = a2.val) & (temp1.id = a2.id) & (unserviced = unserviced - 1)

	[] (a2.serviced = 0) & (totalUnserviced - unserviced = 2) -> (temp2.serviced = a2.serviced) & (temp2.val = a2.val) & (temp2.id = a2.id) & (unserviced = unserviced - 1)

endmodule


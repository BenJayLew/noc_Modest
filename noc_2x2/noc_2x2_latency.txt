digraph G {
	rankdir = TB;
	bgcolor = transparent;
	node [style = filled, fillcolor = white];
__global_vars__ [shape=plaintext, fillcolor="transparent", label=<<table border="0"><tr><td align="left" valign="top" colspan="2">Global variables:</td></tr><tr><td align="left" valign="top">clk</td><td align="left" valign="top" balign="left">= 100</td></tr><tr><td align="left" valign="top">r0</td><td align="left" valign="top" balign="left">= router { bufferArray: array(i, 0, buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }), bufferID: array(i<sub>1</sub>, 0, 0), temp: array(i<sub>2</sub>, 0, buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }), totalUnserviced: 0, unserviced: 0 }</td></tr><tr><td align="left" valign="top">r1</td><td align="left" valign="top" balign="left">= router { bufferArray: array(i<sub>3</sub>, 0, buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }), bufferID: array(i<sub>4</sub>, 0, 0), temp: array(i<sub>5</sub>, 0, buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }), totalUnserviced: 0, unserviced: 0 }</td></tr><tr><td align="left" valign="top">r2</td><td align="left" valign="top" balign="left">= router { bufferArray: array(i<sub>6</sub>, 0, buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }), bufferID: array(i<sub>7</sub>, 0, 0), temp: array(i<sub>8</sub>, 0, buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }), totalUnserviced: 0, unserviced: 0 }</td></tr><tr><td align="left" valign="top">r3</td><td align="left" valign="top" balign="left">= router { bufferArray: array(i<sub>9</sub>, 0, buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }), bufferID: array(i<sub>10</sub>, 0, 0), temp: array(i<sub>11</sub>, 0, buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }), totalUnserviced: 0, unserviced: 0 }</td></tr><tr><td align="left" valign="top">noc</td><td align="left" valign="top" balign="left">= array(i<sub>12</sub>, 0, router { bufferArray: array(i<sub>13</sub>, 0, buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }), bufferID: array(i<sub>14</sub>, 0, 0), temp: array(i<sub>15</sub>, 0, buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }), totalUnserviced: 0, unserviced: 0 })</td></tr><tr><td align="left" valign="top">totalFlitsDelivered</td><td align="left" valign="top" balign="left">= 0</td></tr><tr><td align="left" valign="top">totalLatency</td><td align="left" valign="top" balign="left">= 0</td></tr></table>>];
	0 [shape=box, label=<Clock()<br align="left" />>];
	1 [shape=box, label=<alt {<br align="left" />:: when(clk &lt;= 105) Clock()<br align="left" />:: when(clk &gt; 105) stop<br align="left" />}<br align="left" />>];
	0 -> 1 [label=<tick, {= clk = clk + 1 =}<br align="left" />>];
	1 -> 1 [label=<clk &lt;= 105, tick, {= clk = clk + 1 =}<br align="left" />>];
	_____initial2 [shape=none, style=invisible, label=""];
	_____initial2 -> 0 [label=<true<br align="left" />>];

	2 [shape=box, label=<Top()<br align="left" />>];
	3 [shape=box, label=<initialize_node_nw(0);<br align="left" />initialize_node_ne(1);<br align="left" />initialize_node_sw(2);<br align="left" />initialize_node_se(3);<br align="left" />Populate();<br align="left" />initialRoute(0);<br align="left" />initialRoute(1);<br align="left" />initialRoute(2);<br align="left" />initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	2 -> 3 [label=<τ, {= noc = [ r0, r1, r2, r3 ], routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, east_south_north_north = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }, south_west_east_west = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }, local_local_local_local = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 } =}<br align="left" />>];
	4 [shape=box, label=<initialize_node_ne(1);<br align="left" />initialize_node_sw(2);<br align="left" />initialize_node_se(3);<br align="left" />Populate();<br align="left" />initialRoute(0);<br align="left" />initialRoute(1);<br align="left" />initialRoute(2);<br align="left" />initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	3 -> 4 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = [ east_south_north_north, south_west_east_west, local_local_local_local ], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp = [ east_south_north_north, south_west_east_west, local_local_local_local ], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID = [ -1, 0, 1, -1, 2 ], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id = 1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id = 2, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id = 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = 0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1, east_south_north_north = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }, south_west_east_west = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }, local_local_local_local = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 } =}<br align="left" />>];
	5 [shape=box, label=<initialize_node_sw(2);<br align="left" />initialize_node_se(3);<br align="left" />Populate();<br align="left" />initialRoute(0);<br align="left" />initialRoute(1);<br align="left" />initialRoute(2);<br align="left" />initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	4 -> 5 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = [ east_south_north_north, south_west_east_west, local_local_local_local ], local_local_local_local = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }, south_west_east_west = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }, east_south_north_north = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = 0, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id = 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id = 3, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id = 2, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID = [ -1, -1, 0, 1, 2 ], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp = [ east_south_north_north, south_west_east_west, local_local_local_local ] =}<br align="left" />>];
	6 [shape=box, label=<initialize_node_se(3);<br align="left" />Populate();<br align="left" />initialRoute(0);<br align="left" />initialRoute(1);<br align="left" />initialRoute(2);<br align="left" />initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	5 -> 6 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = [ east_south_north_north, south_west_east_west, local_local_local_local ], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp = [ east_south_north_north, south_west_east_west, local_local_local_local ], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID = [ 0, 1, -1, -1, 2 ], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id = 0, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id = 1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id = 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = 0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 3, east_south_north_north = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }, south_west_east_west = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }, local_local_local_local = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 } =}<br align="left" />>];
	7 [shape=box, label=<Populate();<br align="left" />initialRoute(0);<br align="left" />initialRoute(1);<br align="left" />initialRoute(2);<br align="left" />initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	6 -> 7 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = [ east_south_north_north, south_west_east_west, local_local_local_local ], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp = [ east_south_north_north, south_west_east_west, local_local_local_local ], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID = [ 0, -1, -1, 1, 2 ], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id = 0, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id = 3, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id = 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].dest = -1, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = 0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, east_south_north_north = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }, south_west_east_west = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 }, local_local_local_local = buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 } =}<br align="left" />>];
	8 [shape=box, label=<subPopulate(1);<br align="left" />subPopulate(2);<br align="left" />subPopulate(3);<br align="left" />initialRoute(0);<br align="left" />initialRoute(1);<br align="left" />initialRoute(2);<br align="left" />initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	7 -> 8 [label=<clk % 2 &lt; 1, τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff = enqueue((DiscreteUniform(1, 3) + routerID_routerID_routerID_routerID_routerID_routerID_routerID_i) % 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime = enqueue(clk, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1 =}<br align="left" />>];
	9 [shape=box, label=<subPopulate(2);<br align="left" />subPopulate(3);<br align="left" />initialRoute(0);<br align="left" />initialRoute(1);<br align="left" />initialRoute(2);<br align="left" />initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	8 -> 9 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff = enqueue((DiscreteUniform(1, 3) + routerID_routerID_routerID_routerID_routerID_routerID_routerID_i) % 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime = enqueue(clk, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2 =}<br align="left" />>];
	10 [shape=box, label=<subPopulate(3);<br align="left" />initialRoute(0);<br align="left" />initialRoute(1);<br align="left" />initialRoute(2);<br align="left" />initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	9 -> 10 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff = enqueue((DiscreteUniform(1, 3) + routerID_routerID_routerID_routerID_routerID_routerID_routerID_i) % 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime = enqueue(clk, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 3 =}<br align="left" />>];
	11 [shape=box, label=<initialRoute(0);<br align="left" />initialRoute(1);<br align="left" />initialRoute(2);<br align="left" />initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	10 -> 11 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff = enqueue((DiscreteUniform(1, 3) + routerID_routerID_routerID_routerID_routerID_routerID_routerID_i) % 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime = enqueue(clk, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0 =}<br align="left" />>];
	12 [shape=box, label=<initialRoute(1);<br align="left" />initialRoute(2);<br align="left" />initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	11 -> 12 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1 =}<br align="left" />>];
	13 [shape=box, label=<initialRoute(2);<br align="left" />initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	12 -> 13 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2 =}<br align="left" />>];
	14 [shape=box, label=<initialRoute(3);<br align="left" />do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	13 -> 14 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 3 =}<br align="left" />>];
	15 [shape=box, label=<do {<br align="left" />:: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />>];
	14 -> 15 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val = route(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].dest, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0 =}<br align="left" />>];
	16 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = true =}<br align="left" /> };<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val))) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" /> };<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	15 -> 16 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].serviced = true =}<br align="left" />>];
	17 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val))) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" /> };<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	16 -> 17 [label=<noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val, τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" />>];
	18 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	17 -> 18 [label=<noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" />>];
	19 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	18 -> 19 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced, i_routerID = 0, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	20 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	19 -> 20 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	21 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	20 -> 21 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 1, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	22 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	21 -> 22 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	23 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	22 -> 23 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 2, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	24 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	23 -> 24 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	25 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	24 -> 25 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 0, routerID = 0 =}<br align="left" />>];
	26 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	25 -> 26 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =}<br align="left" />>];
	27 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	26 -> 27 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1 =}<br align="left" />>];
	28 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = true =}<br align="left" /> };<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val))) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" /> };<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	27 -> 28 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].serviced = true =}<br align="left" />>];
	29 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val))) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" /> };<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	28 -> 29 [label=<noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val, τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" />>];
	30 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	29 -> 30 [label=<noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" />>];
	31 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	30 -> 31 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced, i_routerID = 0, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	32 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	31 -> 32 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	33 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	32 -> 33 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 1, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	34 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	33 -> 34 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	35 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	34 -> 35 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 2, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	36 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	35 -> 36 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	37 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	36 -> 37 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 0, routerID = 0 =}<br align="left" />>];
	38 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	37 -> 38 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =}<br align="left" />>];
	39 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	38 -> 39 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2 =}<br align="left" />>];
	40 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = true =}<br align="left" /> };<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val))) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" /> };<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	39 -> 40 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].serviced = true =}<br align="left" />>];
	41 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val))) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" /> };<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	40 -> 41 [label=<noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val, τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" />>];
	42 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	41 -> 42 [label=<noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" />>];
	43 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	42 -> 43 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced, i_routerID = 0, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	44 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	43 -> 44 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	45 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	44 -> 45 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 1, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	46 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	45 -> 46 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	47 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	46 -> 47 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 2, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	48 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	47 -> 48 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	49 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	48 -> 49 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 0, routerID = 0 =}<br align="left" />>];
	50 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	49 -> 50 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =}<br align="left" />>];
	51 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	50 -> 51 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 3 =}<br align="left" />>];
	52 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = true =}<br align="left" /> };<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val))) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" /> };<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	51 -> 52 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].serviced = true =}<br align="left" />>];
	53 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> alt {<br align="left" /> :: when(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" /> :: when(!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val))) {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" /> };<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	52 -> 53 [label=<noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val, τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" />>];
	54 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced =};<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	53 -> 54 [label=<noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = false, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced + 1 =}<br align="left" />>];
	55 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(0, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	54 -> 55 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].totalUnserviced = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].unserviced, i_routerID = 0, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	56 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	55 -> 56 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	57 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(1, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	56 -> 57 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 1, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	58 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	57 -> 58 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	59 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> setPriority(2, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i);<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	58 -> 59 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 2, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	60 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	59 -> 60 [label=<noc[routerID].bufferArray[i_routerID].val == -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	61 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =};<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	60 -> 61 [label=<τ, {= noc[routerID].bufferArray[i_routerID].priority = i_routerID + noc[routerID].unserviced, i_routerID = 0, routerID = 0 =}<br align="left" />>];
	62 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp =};<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	61 -> 62 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2], noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].priority, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].id] = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].priority =}<br align="left" />>];
	63 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	62 -> 63 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray = noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].temp, routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0 =}<br align="left" />>];
	64 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> subPopulate(1);<br align="left" /> subPopulate(2);<br align="left" /> subPopulate(3);<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	63 -> 64 [label=<clk % 2 &lt; 1, τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff = enqueue((DiscreteUniform(1, 3) + routerID_routerID_routerID_routerID_routerID_routerID_routerID_i) % 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime = enqueue(clk, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1 =}<br align="left" />>];
	65 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> subPopulate(2);<br align="left" /> subPopulate(3);<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	64 -> 65 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff = enqueue((DiscreteUniform(1, 3) + routerID_routerID_routerID_routerID_routerID_routerID_routerID_i) % 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime = enqueue(clk, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2 =}<br align="left" />>];
	66 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> subPopulate(3);<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	65 -> 66 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff = enqueue((DiscreteUniform(1, 3) + routerID_routerID_routerID_routerID_routerID_routerID_routerID_i) % 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime = enqueue(clk, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 3 =}<br align="left" />>];
	67 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	66 -> 67 [label=<τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff = enqueue((DiscreteUniform(1, 3) + routerID_routerID_routerID_routerID_routerID_routerID_routerID_i) % 4, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buff), noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime = enqueue(clk, noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferID[4]].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, i_routerID = 0 =}<br align="left" />>];
	68 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	67 -> 68 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	69 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	68 -> 69 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1, i_routerID = 0 =}<br align="left" />>];
	70 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	69 -> 70 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	71 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	70 -> 71 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2, i_routerID = 0 =}<br align="left" />>];
	72 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	71 -> 72 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	73 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	72 -> 73 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, i_routerID = 1 =}<br align="left" />>];
	74 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	73 -> 74 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	75 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	74 -> 75 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1, i_routerID = 1 =}<br align="left" />>];
	76 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	75 -> 76 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	77 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	76 -> 77 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2, i_routerID = 1 =}<br align="left" />>];
	78 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	77 -> 78 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	79 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	78 -> 79 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, i_routerID = 2 =}<br align="left" />>];
	80 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	79 -> 80 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	81 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	80 -> 81 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1, i_routerID = 2 =}<br align="left" />>];
	82 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	81 -> 82 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	83 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	82 -> 83 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2, i_routerID = 2 =}<br align="left" />>];
	84 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	83 -> 84 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	85 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	84 -> 85 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, i_routerID = 3 =}<br align="left" />>];
	86 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	85 -> 86 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	87 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	86 -> 87 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1, i_routerID = 3 =}<br align="left" />>];
	88 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	87 -> 88 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	89 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	88 -> 89 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2, i_routerID = 3 =}<br align="left" />>];
	90 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =};<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	89 -> 90 [label=<noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].time = peekFront(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime) =}<br align="left" />>];
	91 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	90 -> 91 [label=<τ, {= noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].val = route(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].dest, i_routerID), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buff), noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime = dequeue(noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].buffTime), routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, i_routerID = 0 =}<br align="left" />>];
	92 [shape=box, label=<auxdo<br align="left" />{<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" />}<br align="left" />{<br align="left" /> do {<br align="left" /> :: Arbiter_corner(0);<br align="left" /> Arbiter_corner(1);<br align="left" /> Arbiter_corner(2);<br align="left" /> Arbiter_corner(3);<br align="left" /> Populate();<br align="left" /> updateDestination(0, 0);<br align="left" /> updateDestination(1, 0);<br align="left" /> updateDestination(2, 0);<br align="left" /> updateDestination(0, 1);<br align="left" /> updateDestination(1, 1);<br align="left" /> updateDestination(2, 1);<br align="left" /> updateDestination(0, 2);<br align="left" /> updateDestination(1, 2);<br align="left" /> updateDestination(2, 2);<br align="left" /> updateDestination(0, 3);<br align="left" /> updateDestination(1, 3);<br align="left" /> updateDestination(2, 3);<br align="left" /> tick;<br align="left" /> alt {<br align="left" /> :: when(clk &gt;= 105) stop<br align="left" /> :: when(clk &lt; 105) tau<br align="left" /> }<br align="left" /> }<br align="left" />}<br align="left" /><br align="left" />>];
	91 -> 92 [label=<tick<br align="left" />>];
	92 -> 15 [label=<clk &lt; 105, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0 =}<br align="left" />>];
	89 -> 91 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, i_routerID = 0 =}<br align="left" />>];
	87 -> 89 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2, i_routerID = 3 =}<br align="left" />>];
	85 -> 87 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1, i_routerID = 3 =}<br align="left" />>];
	83 -> 85 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, i_routerID = 3 =}<br align="left" />>];
	81 -> 83 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2, i_routerID = 2 =}<br align="left" />>];
	79 -> 81 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1, i_routerID = 2 =}<br align="left" />>];
	77 -> 79 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, i_routerID = 2 =}<br align="left" />>];
	75 -> 77 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2, i_routerID = 1 =}<br align="left" />>];
	73 -> 75 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1, i_routerID = 1 =}<br align="left" />>];
	71 -> 73 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, i_routerID = 1 =}<br align="left" />>];
	69 -> 71 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 2, i_routerID = 0 =}<br align="left" />>];
	67 -> 69 [label=<!noc[i_routerID].bufferArray[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].serviced, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 1, i_routerID = 0 =}<br align="left" />>];
	63 -> 67 [label=<clk % 2 &gt;= 1, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0, i_routerID = 0 =}<br align="left" />>];
	59 -> 60 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	59 -> 60 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	59 -> 60 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	59 -> 60 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	59 -> 60 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	59 -> 60 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	59 -> 61 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 0, routerID = 0 =}<br align="left" />>];
	57 -> 58 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	57 -> 58 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	57 -> 58 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	57 -> 58 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	57 -> 58 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	57 -> 58 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	57 -> 59 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 2, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	55 -> 56 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	55 -> 56 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	55 -> 56 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	55 -> 56 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	55 -> 56 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	55 -> 56 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	55 -> 57 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 1, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	53 -> 54 [label=<!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" />>];
	52 -> 53 [label=<!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = true =}<br align="left" />>];
	47 -> 48 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	47 -> 48 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	47 -> 48 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	47 -> 48 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	47 -> 48 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	47 -> 48 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	47 -> 49 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 0, routerID = 0 =}<br align="left" />>];
	45 -> 46 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	45 -> 46 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	45 -> 46 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	45 -> 46 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	45 -> 46 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	45 -> 46 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	45 -> 47 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 2, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	43 -> 44 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	43 -> 44 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	43 -> 44 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	43 -> 44 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	43 -> 44 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	43 -> 44 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	43 -> 45 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 1, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	41 -> 42 [label=<!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" />>];
	40 -> 41 [label=<!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = true =}<br align="left" />>];
	35 -> 36 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	35 -> 36 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	35 -> 36 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	35 -> 36 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	35 -> 36 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	35 -> 36 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	35 -> 37 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 0, routerID = 0 =}<br align="left" />>];
	33 -> 34 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	33 -> 34 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	33 -> 34 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	33 -> 34 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	33 -> 34 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	33 -> 34 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	33 -> 35 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 2, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	31 -> 32 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	31 -> 32 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	31 -> 32 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	31 -> 32 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	31 -> 32 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	31 -> 32 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	31 -> 33 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 1, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	29 -> 30 [label=<!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" />>];
	28 -> 29 [label=<!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = true =}<br align="left" />>];
	23 -> 24 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	23 -> 24 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	23 -> 24 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	23 -> 24 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	23 -> 24 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	23 -> 24 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	23 -> 25 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 0, routerID = 0 =}<br align="left" />>];
	21 -> 22 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	21 -> 22 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	21 -> 22 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	21 -> 22 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	21 -> 22 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	21 -> 22 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	21 -> 23 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 2, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	19 -> 20 [label=<noc[routerID].bufferArray[i_routerID].val == 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= totalFlitsDelivered = totalFlitsDelivered + 1, totalLatency = totalLatency + (clk - noc[routerID].bufferArray[i_routerID].time) =}<br align="left" />>];
	19 -> 20 [label=<noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff), noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buffTime) =}<br align="left" />>];
	19 -> 20 [label=<noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff), noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buffTime) =}<br align="left" />>];
	19 -> 20 [label=<noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff), noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buffTime) =}<br align="left" />>];
	19 -> 20 [label=<noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4 &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff = enqueue(noc[routerID].bufferArray[i_routerID].dest, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff), noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime = enqueue(noc[routerID].bufferArray[i_routerID].time, noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buffTime) =}<br align="left" />>];
	19 -> 20 [label=<!(noc[routerID].bufferArray[i_routerID].val == 3 &amp;&amp; len(noc[routerID - 1].bufferArray[noc[routerID - 1].bufferID[1]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 2 &amp;&amp; len(noc[routerID + 2].bufferArray[noc[routerID + 2].bufferID[0]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 1 &amp;&amp; len(noc[routerID + 1].bufferArray[noc[routerID + 1].bufferID[3]].buff) &lt; 4) &amp;&amp; !(noc[routerID].bufferArray[i_routerID].val == 0 &amp;&amp; len(noc[routerID - 2].bufferArray[noc[routerID - 2].bufferID[2]].buff) &lt; 4) &amp;&amp; noc[routerID].bufferArray[i_routerID].val != 4 &amp;&amp; noc[routerID].bufferArray[i_routerID].val != -1 &amp;&amp; noc[routerID].bufferArray[i_routerID].serviced, τ<br align="left" />>];
	19 -> 21 [label=<!noc[routerID].bufferArray[i_routerID].serviced, τ, {= noc[routerID].bufferArray[i_routerID].priority = noc[routerID].totalUnserviced - noc[routerID].unserviced, noc[routerID].unserviced = noc[routerID].unserviced - 1, i_routerID = 1, routerID = routerID_routerID_routerID_routerID_routerID_routerID_routerID_i =}<br align="left" />>];
	17 -> 18 [label=<!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val != -1 &amp;&amp; (noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val || noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val)), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[2].serviced = true =}<br align="left" />>];
	16 -> 17 [label=<!(noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val != -1 &amp;&amp; noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].val == noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[0].val), τ, {= noc[routerID_routerID_routerID_routerID_routerID_routerID_routerID_i].bufferArray[1].serviced = true =}<br align="left" />>];
	7 -> 11 [label=<clk % 2 &gt;= 1, τ, {= routerID_routerID_routerID_routerID_routerID_routerID_routerID_i = 0 =}<br align="left" />>];
	_____initial93 [shape=none, style=invisible, label=""];
	_____initial93 -> 2 [label=<south_west_east_west == buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 } &amp;&amp; local_local_local_local == buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 } &amp;&amp; routerID == 0 &amp;&amp; i_routerID == 0 &amp;&amp; east_south_north_north == buffer { buff: none, buffTime: none, dest: -1, id: 0, priority: 0, serviced: false, time: -1, val: -1 } &amp;&amp; routerID_routerID_routerID_routerID_routerID_routerID_routerID_i == 0<br align="left" />>];

}

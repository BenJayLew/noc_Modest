option "dtmc";

//Top level varables
//const int BUFFERLENGTH = 4;
//const int NOCSIZE = 2;
//const int INJECTIONRATENUMERATOR = 1;
//const int INJECTIONRATEDENOMINATOR = 2;

const int DUR;
//const int NsRateDenominator;
//const int EwRateDenominator;
const int clkLower = 100; 
const int clkUpper = clkLower + DUR;
int(clkLower..clkUpper) clk;
//transient int(0..1) clk;
//transient int(0..1) clk2;

action tick;
action tock;
action tack;


/*transient int //totalFlitsDelivered0 = 0;
transient int //totalFlitsDelivered1 = 0;
transient int //totalFlitsDelivered2 = 0;
transient int //totalFlitsDelivered3 = 0;
int //totalFlitsDelivered;*/



int(0..4) localLen;
int(0..4) ewLen;
int(0..4) nsLen;
bool localPriority;
bool nsPriority;
bool ewLockedns;
bool ewLockedlocal;
bool localLockedns;
//bool localLockedew;


int(0..1) sentEw;
int(0..1) sentNs;

int(1..2) localWillSend = 1; //0 indicates it's empty, 1 indicates it sends ew, 2 indicated ns
int(1..2) ewWillSend = 1; //0 indicates it's empty, 1 indicates it sends local, 2 indicates ns
int(0..1) nsFull = 0;

// ------ Begin: properties ---------
//property Pr1 = Pmax(<> (clk >= clkUpper) );
//property Pr2 = Pmax(<>[S(sentEw) <= clkUpper-clkLower] ((clk) >= clkUpper) );
//property Pr3 = Xmax(S(sentEw), clk>=clkUpper);
//property Pr4 = Xmax(S(sentNs), clk>=clkUpper);
//property Pr5 = Pmax(<>[S(clk2) <= (clkUpper-clkLower)] (sentEw == 1));
//property Pr6 = Pmax(<>[S(clk2) <= (clkUpper-clkLower)] (sentNs == 1));
/*property pr11 = Pmax(<> (nsLen ==4 && clk == 173));
property pr12 = Pmax(<> (nsLen == 4 && clk == 174));
property pr13 = Pmax(<> (nsLen ==4 && clk == 175));
property pr14 = Pmax(<> (nsLen ==4 && clk == 176));
property pr15 = Pmax(<> (nsLen == 4 && clk == 177));
property pr16 = Pmax(<> (nsLen == 4 && clk == 178));
property pr17 = Pmax(<> (nsLen == 4 && clk == 179));
property pr18 = Pmax(<> (nsLen ==4 && clk == 180));
property pr19 = Pmax(<> (nsLen ==4 && clk == 181));
property pr20 = Pmax(<> (nsLen == 4 && clk == 182));
property pr21 = Pmax(<> (nsLen ==4 && clk == 183));
property pr22 = Pmax(<> (nsLen ==4 && clk == 184));
property pr23 = Pmax(<> (nsLen == 4 && clk == 185));
property pr24 = Pmax(<> (nsLen == 4 && clk == 186));
property pr25 = Pmax(<> (nsLen == 4 && clk == 187));
property pr26 = Pmax(<> (nsLen ==4 && clk == 188));
property pr27 = Pmax(<> (nsLen ==4 && clk == 189));
property pr28 = Pmax(<> (nsLen == 4 && clk == 190));
property pr29 = Pmax(<> (nsLen ==4 && clk == 191));
property pr30 = Pmax(<> (nsLen ==4 && clk == 192));
property pr31 = Pmax(<> (nsLen == 4 && clk == 193));
property pr32 = Pmax(<> (nsLen == 4 && clk == 194));
property pr33 = Pmax(<> (nsLen == 4 && clk == 195));
property pr34 = Pmax(<> (nsLen ==4 && clk == 196));
property pr35 = Pmax(<> (nsLen ==4 && clk == 197));
property pr36 = Pmax(<> (nsLen == 4 && clk == 198));
property pr37 = Pmax(<> (nsLen ==4 && clk == 199));
property pr38 = Pmax(<> (nsLen ==4 && clk == 200));
property pr39 = Pmax(<> (nsLen == 4 && clk == 201));
property pr40 = Pmax(<> (nsLen == 4 && clk == 202));
property pr41 = Pmax(<> (nsLen == 4 && clk == 203));
property pr42 = Pmax(<> (nsLen ==4 && clk == 204));
property pr43 = Pmax(<> (nsLen ==4 && clk == 205));
property pr44 = Pmax(<> (nsLen == 4 && clk == 206));
property pr45 = Pmax(<> (nsLen ==4 && clk == 207));
property pr46 = Pmax(<> (nsLen ==4 && clk == 208));
property pr47 = Pmax(<> (nsLen == 4 && clk == 209));
property pr48 = Pmax(<> (nsLen == 4 && clk == 210));
property pr49 = Pmax(<> (nsLen == 4 && clk == 211));
property pr50 = Pmax(<> (nsLen ==4 && clk == 212));
property pr51 = Pmax(<> (nsLen ==4 && clk == 213));
property pr52 = Pmax(<> (nsLen == 4 && clk == 214));
property pr53 = Pmax(<> (nsLen ==4 && clk == 215));
property pr54 = Pmax(<> (nsLen ==4 && clk == 216));
property pr55 = Pmax(<> (nsLen == 4 && clk == 217));
property pr56 = Pmax(<> (nsLen == 4 && clk == 218));
property pr57 = Pmax(<> (nsLen == 4 && clk == 219));
property pr58 = Pmax(<> (nsLen ==4 && clk == 220));
property pr59 = Pmax(<> (nsLen ==4 && clk == 221));
property pr60 = Pmax(<> (nsLen == 4 && clk == 222));
property pr61 = Pmax(<> (nsLen ==4 && clk == 223));
property pr62 = Pmax(<> (nsLen ==4 && clk == 224));
property pr63 = Pmax(<> (nsLen ==4 && clk == 225));
property pr64 = Pmax(<> (nsLen ==4 && clk == 226));
property pr65 = Pmax(<> (nsLen == 4 && clk == 227));
property pr66 = Pmax(<> (nsLen ==4 && clk == 228));
property pr67 = Pmax(<> (nsLen ==4 && clk == 229));
property pr68 = Pmax(<> (nsLen ==4 && clk == 230));
property pr69 = Pmax(<> (nsLen == 4 && clk == 231));
property pr70 = Pmax(<> (nsLen ==4 && clk == 232));
property pr71 = Pmax(<> (nsLen ==4 && clk == 233));*/
property pr11 = Pmax(<> (sentNs == 1 && clk == 100));
property pr12 = Pmax(<> (sentNs == 1 && clk == 101));
property pr13 = Pmax(<> (sentNs == 1 && clk == 102));
property pr14 = Pmax(<> (sentNs == 1 && clk == 103));
property pr15 = Pmax(<> (sentNs == 1 && clk == 104));
property pr16 = Pmax(<> (sentNs == 1 && clk == 105));
property pr17 = Pmax(<> (sentNs == 1 && clk == 106));
property pr18 = Pmax(<> (sentNs == 1 && clk == 107));
property pr19 = Pmax(<> (sentNs == 1 && clk == 108));
property pr20 = Pmax(<> (sentNs == 1 && clk == 109));
property pr21 = Pmax(<> (sentNs == 1 && clk == 110));
property pr22 = Pmax(<> (sentNs == 1 && clk == 111));
property pr23 = Pmax(<> (sentNs == 1 && clk == 112));
property pr24 = Pmax(<> (sentNs == 1 && clk == 113));
property pr25 = Pmax(<> (sentNs == 1 && clk == 114));
property pr26 = Pmax(<> (sentNs == 1 && clk == 115));
property pr27 = Pmax(<> (sentNs == 1 && clk == 116));
property pr28 = Pmax(<> (sentNs == 1 && clk == 117));
property pr29 = Pmax(<> (sentNs == 1 && clk == 191));
property pr30 = Pmax(<> (sentNs == 1 && clk == 192));
property pr31 = Pmax(<> (sentNs == 1 && clk == 193));
property pr32 = Pmax(<> (sentNs == 1 && clk == 194));
property pr33 = Pmax(<> (sentNs == 1 && clk == 195));
property pr34 = Pmax(<> (sentNs == 1 && clk == 196));
property pr35 = Pmax(<> (sentNs == 1 && clk == 197));
property pr36 = Pmax(<> (sentNs == 1 && clk == 198));
property pr37 = Pmax(<> (sentNs == 1 && clk == 199));
property pr38 = Pmax(<> (sentNs == 1 && clk == 200));
property pr39 = Pmax(<> (sentNs == 1 && clk == 201));
property pr40 = Pmax(<> (sentNs == 1 && clk == 202));
property pr41 = Pmax(<> (sentNs == 1 && clk == 203));
property pr42 = Pmax(<> (sentNs == 1 && clk == 204));
property pr43 = Pmax(<> (sentNs == 1 && clk == 205));
property pr44 = Pmax(<> (sentNs == 1 && clk == 206));
property pr45 = Pmax(<> (sentNs == 1 && clk == 207));
property pr46 = Pmax(<> (sentNs == 1 && clk == 208));
property pr47 = Pmax(<> (sentNs == 1 && clk == 209));
property pr48 = Pmax(<> (sentNs == 1 && clk == 210));
property pr49 = Pmax(<> (sentNs == 1 && clk == 211));
property pr50 = Pmax(<> (sentNs == 1 && clk == 212));
property pr51 = Pmax(<> (sentNs == 1 && clk == 213));
property pr52 = Pmax(<> (sentNs == 1 && clk == 214));
property pr53 = Pmax(<> (sentNs == 1 && clk == 215));
property pr54 = Pmax(<> (sentNs == 1 && clk == 216));
property pr55 = Pmax(<> (sentNs == 1 && clk == 217));
property pr56 = Pmax(<> (sentNs == 1 && clk == 218));
property pr57 = Pmax(<> (sentNs == 1 && clk == 219));
property pr58 = Pmax(<> (sentNs == 1 && clk == 220));
property pr59 = Pmax(<> (sentNs == 1 && clk == 221));
property pr60 = Pmax(<> (sentNs == 1 && clk == 222));
property pr61 = Pmax(<> (sentNs == 1 && clk == 223));
property pr62 = Pmax(<> (sentNs == 1 && clk == 224));
property pr63 = Pmax(<> (sentNs == 1 && clk == 225));
property pr64 = Pmax(<> (sentNs == 1 && clk == 226));
property pr65 = Pmax(<> (sentNs == 1 && clk == 227));
property pr66 = Pmax(<> (sentNs == 1 && clk == 228));
property pr67 = Pmax(<> (sentNs == 1 && clk == 229));
property pr68 = Pmax(<> (sentNs == 1 && clk == 230));
property pr69 = Pmax(<> (sentNs == 1&& clk == 231));
property pr70 = Pmax(<> (sentNs == 1 && clk == 232));
property pr71 = Pmax(<> (sentNs == 1 && clk == 233));
//property Pr15 = Pmax(<> (nsLen ==4 && clk == 1010));
//property Pr16 = Pmax(<> (nsLen ==4 && clk == 1011));
//property Pr17 = Pmax(<> (nsLen == 4 && clk == 1012));
//property Pr18 = Pmax(<> (nsLen == 4 && clk == 1013));

//propert Pr19 = Pmax(<> (nsLen >= 4));
// ------ End: properties ---------

process LocalBuffer() {

		if(clk%2 == 0) {

		 	tick {= 

					localLen += (localLen < 4) ? 1 : 0,		//Adds a flit to the local buffer of each NoC, if they are not already full
					sentNs = 0,
					sentEw = 0

				=}

		}
		else {

			tick {= sentNs = 0, sentEw = 0 =}
		};

		localBuffer();

		tack {= clk++ =};

		if (clkUpper-clk <= 0) {
		 stop
		}
		else {
		LocalBuffer()
		}

}

process EwBuffer() {

		tick {= nsFull = 0 =};
		ewBuffer();
		receiveEw();

		if (clkUpper-clk <= 0) {
		 stop
		}
		else {
		EwBuffer()
		}
			
}

process NsBuffer() {

		nsFull();
		tock;
		receiveNs();

		if (clkUpper-clk <= 0) {
		 stop
		}
		else {
		NsBuffer()
		}
			
}

process Send() {
		tick;
		tock;
		send();

		if (clkUpper-clk <= 0) {
		 stop
		}
		else {
		Send()
		}
}


process localBuffer() {


	if (localLen != 0) {


		if(localLockedns) {
			tock {= localWillSend = 2 =}
		}
		else {
			tock palt{
				:(1/3): {= localWillSend = 2 =}
				:(2/3): {= localWillSend = 1 =}
			}
		}

	} 

	else {
		tock
	}

}

process ewBuffer() {


	if (ewLen != 0) {

		if(ewLockedlocal) {
			tock {= ewWillSend = 1 =}
		}
		else if(ewLockedns) {
			tock {= ewWillSend = 2 =}
		}
		else {
			tock palt {
				:(1/2): {= ewWillSend = 1 =}
				:(1/2): {= ewWillSend = 2 =}
			}
		}
	} 

	else {
		tock
	}

}

process send() {

	if(ewLen == 0) {
		if(localLen == 0) {
			if(nsLen == 0) {
				tack
			}
			else {
				tack {= nsLen-=1 =}
			}
		}
		else if(localWillSend == 1) {//local tries ew
			if(nsLen == 0) {
				tack {= localLen-=1, sentEw = 1 =}
			}
			else {
				tack {= nsLen-=1, localLen-=1, sentEw = 1 =}
			}
		}
		else { //local tries ns
			if(nsLen == 0) {
				if (nsFull == 0) {
					tack {= localLen-=1, localLockedns = false, sentNs = 1 =}
				}
				else {
					tack {= localLockedns = true, localPriority = true =}
				}
			}
			else {
				if (nsFull == 0) {
					tack {= nsLen-=1, localLen-=1, localLockedns = false, sentNs = 1 =}
				}
				else {
					tack {= nsLen-=1, localLockedns = true, localPriority = true =}
				}
			}
		}

	}
	else if(ewWillSend == 1){  //Ew tries local
		if(localLen == 0) {
			if(nsLen == 0) {
				tack {= ewLen-=1, ewLockedlocal = false =}
			}
			else {
				if(nsPriority) {
					tack {= nsLen-=1, localPriority = false, nsPriority = false, ewLockedlocal = true =}
				}
				else {
					tack {= ewLen-=1, nsPriority = true, ewLockedlocal = false =}
				}
			}
		}
		else if(localWillSend == 1) {//local tries ew
			if(nsLen == 0) {
				tack {= ewLen-=1, localLen-=1, ewLockedlocal = false, sentEw = 1 =}
			}
			else {
				if(nsPriority) {
					tack {= nsLen-=1, localLen-= 1, localPriority = false, sentEw = 1, nsPriority = false, ewLockedlocal = true =}
				}
				else {
					tack {= ewLen-=1, localLen-= 1, nsPriority = true, ewLockedlocal = false, sentEw = 1 =}
				}
			}
		}
		else {//local tries ns
			if(nsLen == 0) {
				if (nsFull == 0) {
					tack {= ewLen-=1, localLen-=1, localLockedns=false, ewLockedlocal = false, sentNs = 1  =}
				}
				else {
					tack {= ewLen-=1, localLockedns = true, localPriority = true =}
				}
			}
			else {
				if(nsPriority) {
					if(nsFull == 0) {
						tack {= nsLen-=1, localLen-=1, nsPriority = false, localPriority = false, localLockedns = false, ewLockedlocal = true, sentNs = 1 =}
					}
					else {
						tack {= nsLen-=1, nsPriority = false, localLockedns = true, ewLockedlocal = true =}
					}
				}
				else {
					if (nsFull == 0) {
						tack {= ewLen-=1, localLen-=1, nsPriority = true, ewLockedlocal = false, localLockedns = false, sentNs = 1 =}
					}
					else {
						tack {= ewLen-=1, nsPriority = true, localPriority = true, ewLockedlocal = false, localLockedns = true =}
					}
				}
			}	
		}		
	}
	else{ //ew tries ns
		if (nsFull == 0) {
			if(localLen == 0) {

				if(nsLen == 0) {
					tack {= ewLen-=1, ewLockedns = false, sentNs = 1 =}
				}
				else {
					tack {= ewLen-=1, nsLen-=1, ewLockedns = false, sentNs = 1 =}
				}
			}
			else if(localWillSend == 1) { //local tries ew
				if(nsLen == 0) {
					tack {= ewLen-=1, localLen-=1, ewLockedns = false, sentNs = 1, sentEw = 1=}
				}
				else {
					tack {= nsLen-=1, ewLen-=1, localLen-=1, ewLockedns = false, sentNs = 1, sentEw = 1=}
				}
			}
			else {//local tries ns
				if(nsLen == 0) {
					if(localPriority) {
						tack {= localLen-=1, localPriority = false, nsPriority = false, ewLockedns = true, localLockedns = false, sentNs = 1 =}
					}
					else {
						tack {= ewLen-=1, localPriority = true, ewLockedns = false, localLockedns = true, sentNs = 1 =}
					}
				}
				else {
					if(localPriority) {
						tack {= localLen-=1, nsLen-=1, localPriority = false, nsPriority = false, ewLockedns = true, localLockedns = false, sentNs = 1 =}
					}
					else {
						tack {= ewLen-=1, nsLen-= 1, localPriority = true, ewLockedns = false, localLockedns = true, sentNs = 1 =}
					}
				}	
			}
		}
		else {
			if(localLen == 0) {
				if(nsLen == 0) {
					tack {= ewLockedns = true, nsPriority = false, localPriority = false =}
				}
				else {
					tack {= nsLen-=1, ewLockedns = true, nsPriority = false, localPriority = false =}
				}
			}
			else if(localWillSend == 1) { //local tries ew
				if(nsLen == 0) {
					tack {= localLen-=1, ewLockedns = true, localPriority = false, nsPriority = false, sentEw = 1=}
				}
				else {
					tack {= nsLen-=1, localLen-=1, ewLockedns = true, nsPriority = false, localPriority = false, sentEw = 1=}
				}
			}
			else {//local tries ns
				if(nsLen == 0) {
					if(localPriority) {
						tack {= nsPriority = false, ewLockedns = true, localLockedns = true =}
					}
					else {
						tack {=nsPriority = false, ewLockedns = true, localLockedns = true =}
					}
				}
				else {
					if(localPriority) {
						tack {= nsLen-=1, nsPriority = false, ewLockedns = true, localLockedns = true =}
					}
					else {
						tack {= nsLen-= 1, nsPriority = false, ewLockedns = true, localLockedns = true =}
					}
				}	
			}
		}	
	}

}

process nsFull() {

	if(clk > 225) {
		if(clk%2 == 0) {
			tick palt {
				:(0.4675324675324657): {= nsFull = 1 =}
			}
		}
		else {
			tick palt {
				:(0.03246753246753237): {= nsFull = 1 =}
			}
		}
	}
	else if (clk < 112) {
		tick {= -1: nsFull = 0 =}
	}	
	else if( clk == 112) {
		tick palt {
		:( 0.24999999999999994): {= nsFull = 1 =}
		}
	}
	else if( clk == 113) {
		tick palt {
		:(0.003472222222222222): {= nsFull = 1 =}
		}
	}
	else if( clk == 114) {
		tick palt {
		:(0.3402777777777777): {= nsFull = 1 =}
		}
	}
	else if( clk == 115) {
		tick palt {
		:(0.00935570987654321): {= nsFull = 1 =}
		}
	}
	else if( clk == 116) {
		tick palt {
		:(0.3968942901234567): {= nsFull = 1 =}
		}
	}
	else if( clk == 117) {
		tick palt {
		:(0.015641075102880653): {= nsFull = 1 =}
		}
	}
	else if( clk == 118) {
		tick palt {
		:(0.4296714248971192): {= nsFull = 1 =}
		}
	}
	else if( clk == 119) {
		tick palt {
		:(0.021031592935528115): {= nsFull = 1 =}
		}
	}
	else if( clk == 120) {
		tick palt {
		:(0.44771840706447164): {= nsFull = 1 =}
		}
	}
	else if( clk == 121) {
		tick palt {
		:(0.025089663351623222): {= nsFull = 1 =}
		}
	}
	else if( clk == 122) {
		tick palt {
		:(0.45733221164837645): {= nsFull = 1 =}
		}
	}
	else if( clk == 123) {
		tick palt {
		:(0.027894024586572155): {= nsFull = 1 =}
		}
	}
	else if( clk == 124) {
		tick palt {
		:(0.4623403504134274): {= nsFull = 1 =}
		}
	}
	else if( clk == 125) {
		tick palt {
		:(0.029719379806654206): {= nsFull = 1 =}
		}
	}
	else if( clk == 126) {
		tick palt {
		:(0.46490952644334543): {= nsFull = 1 =}
		}
	}
	else if( clk == 127) {
		tick palt {
		:(0.030856519684658065): {= nsFull = 1 =}
		}
	}
	else if( clk == 128) {
		tick palt {
		:(0.4662137928153416): {= nsFull = 1 =}
		}
	}
	else if( clk == 129) {
		tick palt {
		:(0.031541733004029654): {= nsFull = 1 =}
		}
	}
	else if( clk == 130) {
		tick palt {
		:(0.46687135293346993): {= nsFull = 1 =}
		}
	}
	else if( clk == 131) {
		tick palt {
		:(0.03194405509683443): {= nsFull = 1 =}
		}
	}
	else if( clk == 132) {
		tick palt {
		:(0.4672014527156651): {= nsFull = 1 =}
		}
	}
	else if( clk == 133) {
		tick palt {
		:(0.03217545928150467): {= nsFull = 1 =}
		}
	}
	else if( clk == 134) {
		tick palt {
		:(0.4673667770466198): {= nsFull = 1 =}
		}
	}
	else if( clk == 135) {
		tick palt {
		:(0.03230636232396465): {= nsFull = 1 =}
		}
	}
	else if( clk == 136) {
		tick palt {
		:(0.46744949705103467): {= nsFull = 1 =}
		}
	}
	else if( clk == 137) {
		tick palt {
		:(0.03237941502264021): {= nsFull = 1 =}
		}
	}
	else if( clk == 138) {
		tick palt {
		:(0.4674908852703279): {= nsFull = 1 =}
		}
	}
	else if( clk == 139) {
		tick palt {
		:(0.03241972970750037): {= nsFull = 1 =}
		}
	}
	else if( clk == 140) {
		tick palt {
		:(0.4675116057417177): {= nsFull = 1 =}
		}
	}
	else if( clk == 141) {
		tick palt {
		:(0.03244177132118782): {= nsFull = 1 =}
		}
	}
	else if( clk == 142) {
		tick palt {
		:(0.467521989054788): {= nsFull = 1 =}
		}
	}
	else if( clk == 143) {
		tick palt {
		:(0.032453728313638006): {= nsFull = 1 =}
		}
	}
	else if( clk == 144) {
		tick palt {
		:(0.4675271982000331): {= nsFull = 1 =}
		}
	}
	else if( clk == 145) {
		tick palt {
		:(0.032460171718723826): {= nsFull = 1 =}
		}
	}
	else if( clk == 146) {
		tick palt {
		:(0.46752981470095306): {= nsFull = 1 =}
		}
	}
	else if( clk == 147) {
		tick palt {
		:(0.032463624269572465): {= nsFull = 1 =}
		}
	}
	else if( clk == 148) {
		tick palt {
		:(0.46753113052168643): {= nsFull = 1 =}
		}
	}
	else if( clk == 149) {
		tick palt {
		:(0.032465465184267794): {= nsFull = 1 =}
		}
	}
	else if( clk == 150) {
		tick palt {
		:(0.46753179300207165): {= nsFull = 1 =}
		}
	}
	else if( clk == 151) {
		tick palt {
		:(0.03246644258369551): {= nsFull = 1 =}
		}
	}
	else if( clk == 152) {
		tick palt {
		:(0.4675321269048289): {= nsFull = 1 =}
		}
	}
	else if( clk == 153) {
		tick palt {
		:(0.032466959573774525): {= nsFull = 1 =}
		}
	}
	else if( clk == 154) {
		tick palt {
		:(0.4675322953681647): {= nsFull = 1 =}
		}
	}
	else if( clk == 155) {
		tick palt {
		:(0.032467232127352294): {= nsFull = 1 =}
		}
	}
	else if( clk == 156) {
		tick palt {
		:(0.46753238044245565): {= nsFull = 1 =}
		}
	}
	else if( clk == 157) {
		tick palt {
		:(0.03246737539156222): {= nsFull = 1 =}
		}
	}
	else if( clk == 158) {
		tick palt {
		:(0.46753242344276064): {= nsFull = 1 =}
		}
	}
	else if( clk == 159) {
		tick palt {
		:(0.032467450496958386): {= nsFull = 1 =}
		}
	}
	else if( clk == 160) {
		tick palt {
		:(0.4675324451949122): {= nsFull = 1 =}
		}
	}
	else if( clk == 161) {
		tick palt {
		:(0.03246748977622162): {= nsFull = 1 =}
		}
	}
	else if( clk == 162) {
		tick palt {
		:(0.4675324562070679): {= nsFull = 1 =}
		}
	}
	else if( clk == 163) {
		tick palt {
		:(0.03246751027409987): {= nsFull = 1 =}
		}
	}
	else if( clk == 164) {
		tick palt {
		:(0.4675324617862217): {= nsFull = 1 =}
		}
	}
	else if( clk == 165) {
		tick palt {
		:(0.032467520949618245): {= nsFull = 1 =}
		}
	}
	else if( clk == 166) {
		tick palt {
		:(0.4675324646148807): {= nsFull = 1 =}
		}
	}
	else if( clk == 167) {
		tick palt {
		:(0.03246752649936903): {= nsFull = 1 =}
		}
	}
	else if( clk == 168) {
		tick palt {
		:(0.46753246605004917): {= nsFull = 1 =}
		}
	}
	else if( clk == 169) {
		tick palt {
		:(0.03246752937957238): {= nsFull = 1 =}
		}
	}
	else if( clk == 170) {
		tick palt {
		:(0.4675324667787208): {= nsFull = 1 =}
		}
	}
	else if( clk == 171) {
		tick palt {
		:(0.0324675308719921): {= nsFull = 1 =}
		}
	}
	else if( clk == 172) {
		tick palt {
		:(0.46753246714894614): {= nsFull = 1 =}
		}
	}
	else if( clk == 173) {
		tick palt {
		:(0.032467531644180786): {= nsFull = 1 =}
		}
	}
	else if( clk == 174) {
		tick palt {
		:(0.4675324673371838): {= nsFull = 1 =}
		}
	}
	else if( clk == 175) {
		tick palt {
		:(0.03246753204317032): {= nsFull = 1 =}
		}
	}
	else if( clk == 176) {
		tick palt {
		:(0.46753246743295945): {= nsFull = 1 =}
		}
	}
	else if( clk == 177) {
		tick palt {
		:(0.032467532249063236): {= nsFull = 1 =}
		}
	}
	else if( clk == 178) {
		tick palt {
		:(0.46753246748172506): {= nsFull = 1 =}
		}
	}
	else if( clk == 179) {
		tick palt {
		:(0.032467532355182765): {= nsFull = 1 =}
		}
	}
	else if( clk == 180) {
		tick palt {
		:(0.46753246750657274): {= nsFull = 1 =}
		}
	}
	else if( clk == 181) {
		tick palt {
		:(0.03246753240981537): {= nsFull = 1 =}
		}
	}
	else if( clk == 182) {
		tick palt {
		:(0.4675324675192426): {= nsFull = 1 =}
		}
	}
	else if( clk == 183) {
		tick palt {
		:(0.03246753243791087): {= nsFull = 1 =}
		}
	}
	else if( clk == 184) {
		tick palt {
		:(0.4675324675257079): {= nsFull = 1 =}
		}
	}
	else if( clk == 185) {
		tick palt {
		:(0.032467532452344405): {= nsFull = 1 =}
		}
	}
	else if( clk == 186) {
		tick palt {
		:(0.46753246752900945): {= nsFull = 1 =}
		}
	}
	else if( clk == 187) {
		tick palt {
		:(0.03246753245975205): {= nsFull = 1 =}
		}
	}
	else if( clk == 188) {
		tick palt {
		:(0.46753246753069677): {= nsFull = 1 =}
		}
	}
	else if( clk == 189) {
		tick palt {
		:(0.03246753246355024): {= nsFull = 1 =}
		}
	}
	else if( clk == 190) {
		tick palt {
		:(0.46753246753155964): {= nsFull = 1 =}
		}
	}
	else if( clk == 191) {
		tick palt {
		:(0.03246753246549597): {= nsFull = 1 =}
		}
	}
	else if( clk == 192) {
		tick palt {
		:(0.4675324675320014): {= nsFull = 1 =}
		}
	}
	else if( clk == 193) {
		tick palt {
		:(0.03246753246649183): {= nsFull = 1 =}
		}
	}
	else if( clk == 194) {
		tick palt {
		:(0.46753246753222766): {= nsFull = 1 =}
		}
	}
	else if( clk == 195) {
		tick palt {
		:(0.032467532467001126): {= nsFull = 1 =}
		}
	}
	else if( clk == 196) {
		tick palt {
		:(0.46753246753234357): {= nsFull = 1 =}
		}
	}
	else if( clk == 197) {
		tick palt {
		:(0.03246753246726136): {= nsFull = 1 =}
		}
	}
	else if( clk == 198) {
		tick palt {
		:(0.4675324675324031): {= nsFull = 1 =}
		}
	}
	else if( clk == 199) {
		tick palt {
		:(0.03246753246739423): {= nsFull = 1 =}
		}
	}
	else if( clk == 200) {
		tick palt {
		:(0.46753246753243355): {= nsFull = 1 =}
		}
	}
	else if( clk == 201) {
		tick palt {
		:(0.03246753246746201): {= nsFull = 1 =}
		}
	}
	else if( clk == 202) {
		tick palt {
		:(0.46753246753244926): {= nsFull = 1 =}
		}
	}
	else if( clk == 203) {
		tick palt {
		:(0.03246753246749655): {= nsFull = 1 =}
		}
	}
	else if( clk == 204) {
		tick palt {
		:(0.46753246753245736): {= nsFull = 1 =}
		}
	}
	else if( clk == 205) {
		tick palt {
		:(0.03246753246751416): {= nsFull = 1 =}
		}
	}
	else if( clk == 206) {
		tick palt {
		:(0.4675324675324615): {= nsFull = 1 =}
		}
	}
	else if( clk == 207) {
		tick palt {
		:(0.03246753246752311): {= nsFull = 1 =}
		}
	}
	else if( clk == 208) {
		tick palt {
		:(0.4675324675324636): {= nsFull = 1 =}
		}
	}
	else if( clk == 209) {
		tick palt {
		:(0.03246753246752767): {= nsFull = 1 =}
		}
	}
	else if( clk == 210) {
		tick palt {
		:(0.4675324675324647): {= nsFull = 1 =}
		}
	}
	else if( clk == 211) {
		tick palt {
		:(0.03246753246752998): {= nsFull = 1 =}
		}
	}
	else if( clk == 212) {
		tick palt {
		:(0.4675324675324652): {= nsFull = 1 =}
		}
	}
	else if( clk == 213) {
		tick palt {
		:(0.03246753246753116): {= nsFull = 1 =}
		}
	}
	else if( clk == 214) {
		tick palt {
		:(0.46753246753246547): {= nsFull = 1 =}
		}
	}
	else if( clk == 215) {
		tick palt {
		:(0.03246753246753176): {= nsFull = 1 =}
		}
	}
	else if( clk == 216) {
		tick palt {
		:(0.4675324675324656): {= nsFull = 1 =}
		}
	}
	else if( clk == 217) {
		tick palt {
		:(0.03246753246753206): {= nsFull = 1 =}
		}
	}
	else if( clk == 218) {
		tick palt {
		:(0.4675324675324657): {= nsFull = 1 =}
		}
	}
	else if( clk == 219) {
		tick palt {
		:(0.032467532467532215): {= nsFull = 1 =}
		}
	}
	else if( clk == 220) {
		tick palt {
		:(0.4675324675324657): {= nsFull = 1 =}
		}
	}
	else if( clk == 221) {
		tick palt {
		:(0.03246753246753229): {= nsFull = 1 =}
		}
	}
	else if( clk == 222) {
		tick palt {
		:(0.4675324675324657): {= nsFull = 1 =}
		}
	}
	else if( clk == 223) {
		tick palt {
		:(0.03246753246753231): {= nsFull = 1 =}
		}
	}
	else if( clk == 224) {
		tick palt {
		:(0.4675324675324657): {= nsFull = 1 =}
		}
	}
	else {
		tick palt {
		:(0.032467532467532347): {= nsFull = 1 =}
		}
	}

}

process receiveNs() {

	if(nsLen < 4) {
		if (clk == 100 || clk == 102 ) {
			tack
		}
		else if (clk == 101) {
			tack palt {
				:(1/3): {= 1: nsLen +=1 =}
			}
		}
		else {
			if(clk%2 == 0) {
				tack palt {
					:(1/6): {= 1: nsLen+=1 =}
				}
			}
			else {
				tack palt {
					:(2/3): {= 1: nsLen+= 1 =}
				}
			}
		}
	}
	else { tack }

}

process receiveEw() {

	if(ewLen < 4) {
		if(clk%2 == 1) {
			tack palt {
				:(2/3): {= 1: ewLen+=1 =}
			}
		}
		else {tack}
	}
	else { tack }

}

	





par{
:: Send()	
::  LocalBuffer()
::  EwBuffer()
::  NsBuffer()
}
